{"version":3,"sources":["services/AuthService.js","components/Authentication/Signup.js","components/Authentication/Login.js","services/SearchService.js","components/Search.js","services/UserInfoService.js","components/UserProfile.js","components/NavBar.js","components/AccountDetails.js","components/Bookshelves.js","components/Create/Discussion.js","components/Create/Review.js","components/Reviews.js","components/Discussions.js","components/Followers.js","components/Following.js","components/BookDetails.js","components/Timeline.js","App.js","reportWebVitals.js","index.js"],"names":["baseURL","process","REACT_APP_DOMAINURL","service","axios","create","withCredentials","AUTH_SERVICE","signup","userData","console","log","post","login","logout","getAuthenticatedUser","env","get","Signup","state","username","email","password","message","handleInputChange","event","target","name","value","setState","handleFormSubmission","preventDefault","then","responseFromServer","user","data","props","history","push","_id","catch","err","response","onSubmit","this","type","placeholder","onChange","React","Component","Login","loggedInUser","onUserChange","SEARCH_SERVICE","getSearchedBooks","query","getBookDetails","bookId","Search","handleInput","handleSearch","toLowerCase","responseFromDB","searchResult","searchOutput","className","autoComplete","length","map","to","id","volumeInfo","title","ACCOUNT_SERVICE","getUserProfile","accountId","getTimeline","editAccountDetails","newAccountDetails","deleteAccount","getUsersShelves","getUsersHasRead","getUsersWantToRead","addBookToHasReadList","bookData","addBookToWantToReadList","removeBookFromWantToReadList","removeBookFromHasReadList","getUsersReviews","userId","postReviewToBook","newReview","startDiscussion","discussion","UserProfile","isLoggedInUser","profile_picture","bio","userName","has_read","want_to_read","reviews","discussions","followers","following","getUserDetails","params","match","responseFromApi","photo","hasRead","wantToRead","toString","isMyProfile","src","alt","NavBar","handleLogout","blah","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","onClick","AccountDetails","userAccountInfo","retreiveUserInfo","responseFromAPI","handleSubmission","editedUser","Bookshelves","booksHasRead","booksWantsToRead","user_id","getBookshelves","authorized","book","subtitle","authors","author","description","Discussion","Review","numOfStars","content","addReviewToBook","min","max","Reviews","getUserReviews","reviewsFromDB","review","Discussions","isLoggedIn","getUsersDiscussions","userFromDB","Followers","getUserFollowers","follower","Follow","getUserFollowing","BookDetails","getDetails","bookFromDB","image_url","Timeline","usersTheyFollowAndPosts","getUsersTimeline","App","currentUser","updateUser","exact","path","render","component","Following","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.14e5dac3.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseURL = process.env.REACT_APP_DOMAINURL\n// const baseURL = 'https://boookr.herokuapp.com'\nconst service = axios.create({\n    baseURL,\n    withCredentials: true\n});\n\nconst AUTH_SERVICE = {\n    signup(userData) {\n        console.log(baseURL)\n        return service.post('/api/signup', userData)\n    },\n    login(userData) {\n        return service.post('/api/login', userData)\n    },\n    logout() {\n        return service.post('/api/logout', {})\n    },\n    getAuthenticatedUser() {\n        console.log({baseURL, env: process.env})\n        return service.get('/api/isLoggedIn')\n    }\n}\n\nexport default AUTH_SERVICE;","import React from 'react';\n\nimport AUTH_SERVICE from '../../services/AuthService';\n\nexport default class Signup extends React.Component {\n  state = {\n    username: '',\n    email: '',\n    password: '',\n    message: null\n  };\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  handleFormSubmission = event => {\n    event.preventDefault();\n\n    const { username, email, password } = this.state;\n\n    AUTH_SERVICE.signup({ username, email, password })\n      .then(responseFromServer => {\n        const { user } = responseFromServer.data;\n\n        // Lift the user object to the App.js\n        // this.props.onUserChange(user);\n\n        // Redirect user to home page after successful sign up\n        this.props.history.push(`/profile/${user._id}`);\n      })\n      .catch(err => {\n        if (err.response && err.response.data) {\n          return this.setState({ message: err.response.data.message });\n        }\n      });\n  };\n\n  render() {\n    return (\n      <>\n        <section>\n          <h2> Sign Up </h2>\n\n          <form onSubmit={this.handleFormSubmission}>\n            <label>\n              Username:\n              <input\n                name='username'\n                type='text'\n                placeholder='ana'\n                value={this.state.username}\n                onChange={this.handleInputChange}\n              />\n            </label>\n\n            <label>\n              Email:\n              <input\n                name='email'\n                type='email'\n                placeholder='ana@ironhack.com'\n                value={this.state.email}\n                onChange={this.handleInputChange}\n              />\n            </label>\n\n            <label>\n              Password:\n              <input\n                name='password'\n                type='password'\n                placeholder='**********'\n                value={this.state.password}\n                onChange={this.handleInputChange}\n              />\n            </label>\n\n            <button> Signup </button>\n          </form>\n\n          {/* if the message is not NULL then show the message */}\n          {this.state.message && <div> {this.state.message} </div>}\n        </section>\n      </>\n    );\n  }\n}","import React from 'react';\nimport { Link } from 'react-router-dom'\n\nimport AUTH_SERVICE from '../../services/AuthService';\n\nexport default class Login extends React.Component {\n  state = {\n    email: '',\n    password: '',\n    message: null,\n    loggedInUser: []\n  };\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n\n  handleFormSubmission = event => {\n    event.preventDefault();\n\n    const { email, password } = this.state;\n\n    AUTH_SERVICE.login({ email, password })\n      .then(responseFromServer => {\n        // console.log(responseFromServer.data)\n        const { user } = responseFromServer.data;\n        // console.log(this.props)\n        // Lift the user object to the App.js\n        this.props.onUserChange(user);\n\n        // Redirect user to home page after successful sign up\n        this.props.history.push(`/profile/${user._id}`);\n      })\n      .catch(err => {\n        if (err.response && err.response.data) {\n          return this.setState({ message: err.response.data.message });\n        }\n      });\n  };\n\n  render() {\n    // console.log(this.state.loggedInUser)\n    return (\n      <>\n        <section>\n          <h2> Login </h2>\n\n          <form onSubmit={this.handleFormSubmission}>\n            <label>\n              Email:\n              <input\n                name='email'\n                type='email'\n                placeholder='ana@ironhack.com'\n                value={this.state.email}\n                onChange={this.handleInputChange}\n              />\n            </label>\n\n            <label>\n              Password:\n              <input\n                name='password'\n                type='password'\n                placeholder='**********'\n                value={this.state.password}\n                onChange={this.handleInputChange}\n              />\n            </label>\n            <button type='submit'> Login </button>\n            \n          </form>\n\n          {/* if the message is not NULL then show the message */}\n          {this.state.message && <div> {this.state.message} </div>}\n        </section>\n      </>\n    );\n  }\n}","import axios from 'axios'\nconst baseURL = process.env.REACT_APP_DOMAINURL\n// const baseURL = 'https://boookr.herokuapp.com'\n\nconst service = axios.create({\n    baseURL,\n    withCredentials: true\n});\n\nconst SEARCH_SERVICE = {\n    service,\n\n    getSearchedBooks(query) {\n        return service.post(`/api/book-search?q=${query}`)\n    },\n    getBookDetails(bookId){\n        return service.get(`/api/details/${bookId}`)\n    }\n}\n\nexport default SEARCH_SERVICE;","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport SEARCH_SERVICE from '../services/SearchService'\n\nexport class Search extends Component {\n\nconstructor(props) {\n    super(props)\n\n    this.state = {\n         searchResult: [],\n         query: ''\n    }\n}\n\n    \n    handleInput = (event) => {\n        this.setState({\n            query: event.target.value\n        })\n    }\n\n\n    handleSearch = () => {\n       SEARCH_SERVICE\n            .getSearchedBooks(this.state.query.toLowerCase())\n            .then(responseFromDB => {\n                // console.log(responseFromDB.data.searchOutput)\n                this.setState({\n                    searchResult: responseFromDB.data.searchOutput\n                })\n            })\n            .catch(err => console.log(err))\n    }\n\n    render() {\n        // console.log(this.state.query)\n        console.log(this.state.searchResult)\n        return (\n            <div className='search-container'>\n            <form className=\"form-inline\" onChange={this.handleSearch}>\n                <input placeholder='Search' className=\"form-control mr-sm-2\" name='query' type='search' autoComplete=\"off\" value={this.state.query} onChange={this.handleInput} />\n                <button className=\"btn btn-outline-info my-2 my-sm-0\" type=\"submit\">Search</button>\n            </form>\n\n            {this.state.query.length > 0 && <div className='search-results'>\n                {this.state.searchResult.map(searchResult => {\n                    return(\n                        <div className='single-result'>\n                            {/* <img src={searchResult.volumeInfo.imageLinks?.smallThumbnail} alt='book-thumbnail' className='book-thumbnail'/> */}\n                            <Link to={`/details/${searchResult?.id}`}>{searchResult.volumeInfo.title}</Link>\n                        </div>\n                    )\n                })}\n            </div>}\n            </div>\n        )\n    }\n}\n\nexport default Search;\n","import axios from 'axios'\nconst baseURL = process.env.REACT_APP_DOMAINURL\n// const baseURL = 'https://boookr.herokuapp.com'\n\nconst service = axios.create({\n    baseURL,\n    withCredentials: true\n});\n\nconst ACCOUNT_SERVICE = {\n    service,\n\n    getUserProfile(accountId) {\n        return service.get(`/api/account/${accountId}`)\n    },\n\n    getTimeline(){\n        return service.get('/api/posts')\n    },\n\n    editAccountDetails(newAccountDetails) {\n        return service.post(`/api/account/edit`, newAccountDetails)\n    },\n\n    deleteAccount() {\n        return service.post(`/api/delete-account`, {})\n    },\n\n    getUsersShelves(accountId) {\n        return service.get(`/api/shelves/${accountId}`)\n    },\n    \n    getUsersHasRead(accountId) {\n        return service.get(`/api/has-read/${accountId}`)\n    },\n\n    getUsersWantToRead(accountId) {\n        return service.get(`/api/want-to-read/${accountId}`)\n    },\n\n    addBookToHasReadList(bookId, bookData) {\n        return service.post(`/api/add-to-has-read/${bookId}`, bookData)\n    },\n\n    addBookToWantToReadList(bookId, bookData) {\n        return service.post(`/api/add-to-want-to-read/${bookId}`, bookData)\n    },\n\n    removeBookFromWantToReadList(bookId) {\n        return service.post(`/api/remove-want-book/${bookId}`), {}\n    },\n\n    removeBookFromHasReadList(bookId) {\n        return service.post(`/api/remove-has-book/${bookId}`, {})\n    },\n\n    getUsersReviews(userId) {\n        return service.get(`/api/reviews/${userId}`)\n    },\n\n    postReviewToBook(bookId, newReview) {\n        return service.post(`/api/review/${bookId}`, newReview)\n    },\n\n    startDiscussion(bookId, discussion) {\n        return service.post(`/start-discussion/${bookId}`, discussion)\n    }\n\n}\n\nexport default ACCOUNT_SERVICE;","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport ACCOUNT_SERVICE from '../services/UserInfoService'\n\nexport default class UserProfile extends Component {\n    state = {\n        isLoggedInUser: false,\n        profile_picture: '',\n        bio: '',\n        userName: '',\n        has_read: [],\n        want_to_read: [],\n        reviews: [],\n        discussions: [],\n        followers: [],\n        following: []\n    }\n\n    componentDidMount() {\n        this.getUserDetails();\n    }\n\n    getUserDetails =  () => {\n        const { params } = this.props.match\n        ACCOUNT_SERVICE\n            .getUserProfile(params.accountId)\n            .then(responseFromApi => {\n                this.props.onUserChange(responseFromApi.data.user)\n                console.log(responseFromApi);\n                this.setState({\n                    isLoggedInUser: true,\n                    profile_picture: responseFromApi.data.user.photo,\n                    userName: responseFromApi.data.user.username,\n                    has_read: responseFromApi.data.user.hasRead,\n                    want_to_read: responseFromApi.data.user.wantToRead,\n                    reviews: responseFromApi.data.user.reviews,\n                    discussions: responseFromApi.data.user.discussions,\n                    followers: responseFromApi.data.user.followers,\n                    following: responseFromApi.data.user.following,\n                    bio: responseFromApi.data.user.bio\n                })\n            })\n            .catch(err => console.log(err))\n    }\n\n\n    render() {\n        // console.log(this.props.user?._id)\n        console.log('props', this.props)\n        console.log(this.props?.user?.user?._id.toString() === this.props.match.params.accountId.toString())\n        // console.log(this.state.isLoggedInUser)\n        // console.log({user: this.props?.user?.user?._id, params: this.props.match.params.accountId})\n        // if (!this.props.user?.user?._id) return  <div>Loading....</div>\n        if (!this.state.isLoggedInUser) return <div>Loading...</div>\n        const isMyProfile = this.props?.user?.user?._id.toString() === this.props.match.params.accountId.toString();\n        return (\n    \n                <div className='container'>\n                    <div className='row'>\n                        <div className='col-lg-9'>\n                            <div>\n                                <img src={this.state.profile_picture} alt='user-avi' className='user-avi'/>\n                            </div>\n                            <div>\n                                <h2>{this.state.userName}</h2>\n                                {isMyProfile && <p><Link to='/'>edit profile</Link></p>}\n                            </div>\n                        </div>\n                        <div className='col-lg-3'>\n                            <div>\n                                <ul className='profile-links'>\n                                    <li>\n                                        <Link to={`/reviews/${this.props.match.params.accountId}`}>Reviews</Link>\n                                    </li>\n                                    <li>\n                                        <Link to={`/discussions/${this.props.match.params.accountId}`}>Discussions</Link>\n                                    </li>\n                                    <li>\n                                        <Link to={`/followers/${this.props.match.params.accountId}`}>Followers</Link>\n                                    </li>\n                                    <li>\n                                        <Link to={`/following/${this.props.match.params.accountId}`}>Following</Link>\n                                    </li>\n                                    <li>\n                                        <Link to={`/shelves/${this.props.match.params.accountId}`}>Shelves</Link>\n                                    </li>\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n           \n        )\n    }\n}\n\n\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport AUTH_SERVICE from '../services/AuthService'\nimport Search from './Search'\nimport '../App.css'\n\nexport default class NavBar extends Component {\n    // state = {\n    //     user_id: this.props.user?._id || null\n    // }\n\n    // componentDidMount() {\n    //     this.getLoggedInUser();\n    // }\n\n    // getLoggedInUser = () => {\n    //     AUTH_SERVICE\n    //         .getAuthenticatedUser()\n    //         .then(responseFromDB => {\n    //             responseFromDB.data.user ? \n    //             this.setState({\n    //                 isLoggedIn: true,\n    //                 user_id: responseFromDB.data.user._id\n    //             }) :\n    //             this.setState({\n    //                 isLoggedIn: false\n    //             })\n    //         })\n    // }\n\n    handleLogout = () => {\n        console.log('route called')\n        AUTH_SERVICE\n            .logout()\n            .then((blah) => {\n                console.log('logged out!', {blah});\n                this.props.onUserChange(null);\n            //     this.setState({\n            //     isLoggedIn: false\n            // })\n            // this.props.history.push('/');\n        })\n            .catch(err => console.log(err))\n    }\n\n    \n\n\n    render() {\n        console.log({props: this.props})\n        return (\n            <nav className=\"navbar navbar-light\" >\n                <div>\n                    BOOKR.\n                </div>\n                {this.props.user && \n                <>\n                    <div>\n                    <ul>\n                        <li>\n                            <Link className='nav-links' to='/home'>Home</Link>\n                        </li>\n                        <li>\n                            <Link className='nav-links' to={`/shelves/${this.props.user?.user?._id}`}>My Shelves</Link>\n                        </li>\n                        <li>\n                        <div className=\"dropdown\">\n                            <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                               Account\n                            </button>\n                            <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n                                <Link className=\"dropdown-item\" to={`/profile/${this.props.user?.user?._id}`}>Profile</Link>\n                                <Link className=\"dropdown-item\" to={`/account/${this.props.user?.user?._id}`}>Account Details</Link>\n                                <Link className=\"dropdown-item\" to='/' onClick={this.handleLogout}>Logout</Link>\n                            </div>\n                        </div>\n                        </li>\n                    </ul>\n                </div>\n                <div>\n                    <Search />\n                </div>\n                </>\n            }\n            {this.props.user === null  &&\n                <div>\n                    <button><Link to='/login'>Log In</Link></button>\n                    <button><Link to='/signup'>Sign Up</Link></button>\n                </div>}\n               \n            </nav>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport ACCOUNT_SERVICE from '../services/UserInfoService'\n\nexport default class AccountDetails extends Component {\n\n    state = {\n        // isLoggedInUser: false,\n        userAccountInfo: []\n    }\n\n    componentDidMount() {\n        this.retreiveUserInfo();\n    }\n\n    retreiveUserInfo = () => {\n        // const { params } = this.props.match;\n            ACCOUNT_SERVICE\n                .getUserProfile(this.props?.user?.user?._id)\n                .then(responseFromAPI => {\n                    // console.log(responseFromAPI.data.user)\n                    this.setState({\n                        userAccountInfo: responseFromAPI.data.user\n                        // isLoggedInUser: responseFromAPI.data.authorized\n                    })\n                })\n    }\n\n    handleSubmission = () => {\n\n        ACCOUNT_SERVICE\n            .editAccountDetails()\n            .then(editedUser => console.log(editedUser))\n            .catch(err => console.log(err))\n    }\n\n\n    render() {\n        console.log(this.state.userAccountInfo)\n        const isMyProfile = this.props?.user?.user?._id.toString() === this.props.match.params.accountId.toString();\n        return (\n            <>\n                {isMyProfile && \n                <div>\n                <form onSubmit={this.handleSubmission}>\n                    <label>\n                        Email Address\n                        <input type='email' placeholder={`${this.state.userAccountInfo.email}`}/>\n                    </label>\n                    {/* <label>\n                        First Name\n                        <input type='text' placeholder={`${this.state.userAccountInfo.email}`}/>\n                    </label> */}\n                    <label>\n                        User Name\n                        <input type='text' placeholder={`${this.state.userAccountInfo.username}`}/>\n                    </label>\n                    {/* <label>\n                        Bio\n                        <input type='text' placeholder={`${this.state.userAccountInfo.bio}`}/>\n                    </label> */}\n                    <label>\n                        Input password to change details\n                        <input type='password' placeholder='*******' autoComplete='off'/>\n                    </label>\n                    <button type='submit'>Save Profile Settings</button>\n                </form>\n                </div>\n                }\n            </>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport ACCOUNT_SERVICE from '../services/UserInfoService'\n\nexport default class Bookshelves extends Component {\n    state = {\n        isLoggedInUser: false,\n        booksHasRead: [],\n        booksWantsToRead: [],\n        user_id: '',\n        username: ''\n    }\n\n    componentDidMount() {\n        this.getBookshelves();\n    }\n\n    getBookshelves = () => {\n        const { params } = this.props.match\n        ACCOUNT_SERVICE\n            .getUserProfile(params.accountId)\n            .then(responseFromDB => {\n                this.setState({\n                    booksHasRead: responseFromDB.data.user.hasRead,\n                    booksWantsToRead: responseFromDB.data.user.wantToRead,\n                    isLoggedInUser: responseFromDB.data.authorized,\n                    username: responseFromDB.data.user.username,\n                    user_id: responseFromDB.data.user._id \n\n                })\n            })\n            .catch(err => console.log(err))\n    }\n\n\n    render() {\n        return (\n            <div>\n                {this.state.booksHasRead.length > 0 && \n                <div>\n                    <h1>Books user has read</h1>\n                    {this.state.booksHasRead.map(book => {\n                        return (\n                            <div key={book._id}>\n                                <h2>{book.title}</h2>\n                                <h3>{book.subtitle}</h3>\n                                <h4>{book.authors.map(author => author)}</h4>\n                                <p>{book.description}</p>\n                            </div>\n                        )\n                    })}\n                </div>}\n                {this.state.booksWantsToRead.length > 0 && \n                <div>\n                    <h1>Books user wants to read</h1>\n                    {this.state.booksWantsToRead.map(book => {\n                        return(\n                            <div key={book._id}>\n                                <h2>{book.title}</h2>\n                                <h3>{book.subtitle}</h3>\n                                <h4>{book.authors.map(author => author)}</h4>\n                                <p>{book.description}</p>\n                            </div>\n                        )\n                    })}\n                </div>}\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport ACCOUNT_SERVICE from '../../services/UserInfoService'\n\nexport default class Discussion extends Component {\n\n    state = {\n        title: '',\n        discussion: ''\n    }\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({ [name]: value });\n    }\n\n    handleSubmission = () => {\n        const { bookId } = this.props.match.params\n        const { title, discussion } = this.state\n        ACCOUNT_SERVICE\n            .startDiscussion(bookId)\n            .then(response => this.props.history.push(`/discussions/${this.props.user?.user?._id}`))\n            .catch(err => console.log(err))\n    }\n\n    render() {\n        return (\n            <div>\n                <form onSubmit={this.handleSubmission}>\n                    <label>\n                        Title: \n                        <input type='text' name='title' value={this.state.title} onChange={this.handleInputChange}/>\n                    </label>\n                    <label>\n                        Discussion: \n                        <input type='text' name='discussion' value={this.state.discussion} onChange={this.handleInputChange}/>\n                    </label>\n                    <button type='submit'>Start Discussion</button>\n                </form>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport ACCOUNT_SERVICE from '../../services/UserInfoService'\n\nexport default class Review extends Component {\n\n    state = {\n        numOfStars: 0,\n        content: ''\n    }\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({ [name]: value });\n    }\n\n    addReviewToBook = (event) => {\n        // event.preventDefault();\n        const { numOfStars, content } = this.state\n        const { bookId } = this.props.match.params\n        // const { userId } = this.props.user?.user?._id\n        // console.log(bookId, {numOfStars, content})\n        ACCOUNT_SERVICE\n            .postReviewToBook(bookId, {numOfStars, content})\n            .then(response => this.props.history.push(`/reviews/${this.props.user?.user?._id}`))\n            .catch(err => console.log(err))\n    }\n\n    render() {\n        // console.log(this.props.match.params.bookId)\n        const { numOfStars, content } = this.state\n        // console.log({numOfStars, content})\n        return (\n            <div>\n                <form onSubmit={this.addReviewToBook}>\n                    <label>\n                        Stars / 5\n                        <input type='number' min='0' max='5' name='numOfStars' value={numOfStars} onChange={this.handleInputChange}/>\n                    </label>\n                    <label>\n                        Review\n                        <input type='text' name='content' value={content} onChange={this.handleInputChange}/>\n                    </label>\n                    <button type='submit'>Post Review</button>\n                </form>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport ACCOUNT_SERVICE from '../services/UserInfoService'\n\nexport default class Reviews extends Component {\n    state = {\n        // isLoggedInUser: false,\n        reviews: []\n    }\n\n    componentDidMount(){\n        this.getUserReviews();\n    }\n\n    getUserReviews = () => {\n        ACCOUNT_SERVICE\n            .getUsersReviews(this.props.match.params.accountId)\n            .then(reviewsFromDB => {\n                // console.log(reviewsFromDB)\n                this.setState({\n                    // isLoggedInUser: reviewsFromDB.data.authorized,\n                    reviews: reviewsFromDB.data.reviews\n                })\n            })\n            .catch(err => console.log(err))\n    }\n\n\n    render() {\n        console.log(this.state.reviews)\n\n        // console.log(this.props?.user?.user?._id)\n        // console.log(this.state.isLoggedInUser)\n        return (\n            <div>\n                {this.state.reviews.map(review => {\n                    return(\n                    <div key={review._id}>\n                        <p>content: {review.content}</p>\n                        <p>rating: {review.numOfStars}</p>\n                        <p>book reviewing: {review.book?.title}</p>\n                    </div>\n                    )\n                })}\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport ACCOUNT_SERVICE from '../services/UserInfoService'\n\nexport default class Discussions extends Component {\n    state = {\n        isLoggedIn: false,\n        discussions: []\n    }\n\n\n    componentDidMount(){\n        this.getUsersDiscussions();\n    }\n\n    getUsersDiscussions = () => {\n        ACCOUNT_SERVICE\n            .getUserProfile(this.props.match.params.accountId)\n            .then(userFromDB => {\n                this.setState({\n                    // isLoggedIn: userFromDB.data.authorized,\n                    discussions: userFromDB.data.user.discussions\n                })\n            })\n            .catch(err => console.log(err))\n    }\n\n\n    render() {\n        // console.log(this.state.isLoggedIn)\n        console.log(this.state.discussions)\n        const isMyProfile = this.props?.user?.user?._id.toString() === this.props.match.params.accountId.toString();\n        console.log(isMyProfile)\n        return (\n            <div>\n                {this.state.discussions.map(discussion => {\n                    return(\n                        <div key={discussion._id}>\n                            <h2>{discussion.title}</h2>\n                            <h4>Regarding: {discussion.book.title} By: {discussion.book.authors}</h4>\n                            <p>{discussion.content}</p>\n                            \n                        </div>\n                    )\n                })}\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport ACCOUNT_SERVICE from '../services/UserInfoService'\n\nexport default class Followers extends Component {\n    state = {\n        isLoggedIn: false,\n        followers: []\n    }\n\n    componentDidMount(){\n        this.getUserFollowers();\n    }\n\n    getUserFollowers = () => {\n        ACCOUNT_SERVICE\n            .getUserProfile(this.props.match.params.accountId)\n            .then(user => {\n                this.setState({\n                    isLoggedIn: user.data.authorized,\n                    followers: user.data.user.followers\n                })\n            })\n            .catch(err => console.log(err))\n    }\n    render() {\n        console.log(this.state.followers)\n        return (\n            <div>\n                {this.state.followers.map(follower => {\n                    return(\n                        <div key={follower._id}>\n                            <img src={follower.photo} alt='follower-avi' />\n                            <Link to={`/profile/${follower._id}`}><p>{follower.username}</p></Link>\n                        </div>\n                    )\n                })}\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport ACCOUNT_SERVICE from '../services/UserInfoService'\n\nexport default class Follow extends Component {\n    state = {\n        isLoggedIn: false,\n        following: []\n    }\n\n    componentDidMount(){\n        this.getUserFollowing();\n    }\n\n    getUserFollowing = () => {\n        ACCOUNT_SERVICE\n            .getUserProfile(this.props.match.params.accountId)\n            .then(user => {\n                this.setState({\n                    isLoggedIn: user.data.authorized,\n                    following: user.data.user.following\n                })\n            })\n            .catch(err => console.log(err))\n    }\n\n\n\n    render() {\n        console.log(this.state.following)\n        return (\n            <div>\n                {this.state.following.map(following => {\n                    return(\n                        <div key={following._id}>\n                            <img src={following.photo} alt='following-avi' />\n                            <Link to={`/profile/${following._id}`}><p>{following.username}</p></Link>\n                        </div>\n                    )\n                })}\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport SEARCH_SERVICE from '../services/SearchService'\n\nexport default class BookDetails extends Component {\n    state = {\n        book: []\n    }\n\n    componentDidMount(){\n        this.getDetails();\n    }\n\n    getDetails = () => {\n        SEARCH_SERVICE\n            .getBookDetails(this.props.match.params.bookId)\n            .then(bookFromDB => {\n                // console.log(bookFromDB.data)\n                this.setState({\n                    book: bookFromDB.data\n                })\n            })\n    }\n    render() {\n        console.log(this.state.book)\n        const { book } = this.state\n        return (\n            <div>\n                <img src={book.image_url} alt='book-cover' />\n                <button>\n                    <Link to={`/review/${book._id}`}>\n                    Write a Review\n                    </Link>\n                </button>\n                <button>\n                    <Link to={`/discuss/${book._id}`}>\n                    Start a Discussion\n                    </Link>\n                </button>\n                    <h1>{book.title}</h1>\n                    <h3>{book.subtitle}</h3>\n                    <p>by: {book.authors}</p>\n                    <p>{book.description}</p>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport ACCOUNT_SERVICE from '../services/UserInfoService'\n\nexport default class Timeline extends Component {\n    state = {\n        usersTheyFollowAndPosts: []\n    }\n\n    componentDidMount(){\n        this.getUsersTimeline();\n    }\n\n    getUsersTimeline = () => {\n        ACCOUNT_SERVICE\n            .getTimeline()\n            .then(responseFromDB => {\n                this.setState({\n                    usersTheyFollowAndPosts: responseFromDB.data\n                })\n            })\n            .catch(err => console.log(err))\n    }\n    render() {\n        console.log(this.state.usersTheyFollowAndPosts)\n        // const isMyProfile = this.props?.user?.user?._id.toString() === this.props.match.params.accountId.toString();\n        return (\n            <div>\n                \n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// import Landing from './components/Landing'\nimport Signup from './components/Authentication/Signup'\nimport Login from './components/Authentication/Login'\nimport AUTH_SERVICE from './services/AuthService'\nimport Search from './components/Search'\nimport UserProfile from './components/UserProfile'\nimport NavBar from './components/NavBar'\nimport AccountDetails from './components/AccountDetails'\nimport Bookshelves from './components/Bookshelves'\nimport Discussion from './components/Create/Discussion'\nimport Review from './components/Create/Review'\nimport Reviews from './components/Reviews'\nimport Discussions from './components/Discussions'\nimport Followers from './components/Followers'\nimport Following from './components/Following'\nimport BookDetails from './components/BookDetails'\nimport Timeline from './components/Timeline'\n// import CreateReview from './components/Create/Review'\n// import CreateDiscussion from './components/Create/Discussion'\n\nexport default class App extends Component {\n\n  state = {\n    currentUser: null,\n    reviews: [],\n    discussions: []\n  }\n\n  componentDidMount() {\n    // console.log('component mounted', {AUTH_SERVICE});\n    this.updateUser();\n  }\n\n  updateUser = user => {\n    // this.setState({ currentUser: user })\n    AUTH_SERVICE.getAuthenticatedUser()\n    .then(responseFromServer => {\n      console.log(`auth user in App.js ${responseFromServer}`)\n      this.setState({\n        currentUser: responseFromServer.data\n      })\n    })\n    .catch(err => { \n      console.log('error in update user', err);\n      this.setState({currentUser: null});\n    });\n  }\n\n  // updateUserReviews = review => {\n  \n  // }\n\n  render() {\n    console.log('user in client', this.state.currentUser)\n    return (\n      <div>\n    \n      <NavBar user={this.state.currentUser} onUserChange={this.updateUser}/>\n          <Switch>\n            {/* <Route exact path='/' component={Landing} /> */}\n            <Route exact path='/search' render={props => <Search {...props} />} />\n            <Route exact path='/signup' render={props => <Signup {...props} />} />\n            <Route exact path='/login' render={props => <Login {...props} onUserChange={this.updateUser} />} />\n            <Route exact path='/profile/:accountId' render={props => <UserProfile {...props} user={this.state.currentUser} onUserChange={this.updateUser} /> }/>\n            <Route exact path='/account/:accountId' render={props => <AccountDetails {...props} user={this.state.currentUser} onUserChange={this.updateUser} />} />\n            <Route exact path='/shelves/:accountId' component={Bookshelves} />\n            <Route exact path='/discuss/:bookId' render={props => <Discussion {...props} user={this.state.currentUser} />} />\n            <Route exact path='/discussions/:accountId' render={props => <Discussions {...props} user={this.state.currentUser} onUserChange={this.updateUser} /> } /> \n            <Route exact path='/review/:bookId' render={props => <Review {...props} user={this.state.currentUser} />} />\n            <Route exact path='/reviews/:accountId' render={props => <Reviews {...props} user={this.state.currentUser} onUserChange={this.updateUser}/>} />\n            <Route exact path='/followers/:accountId' component={Followers} />\n            <Route exact path='/following/:accountId' component={Following} />\n            <Route exact path='/details/:bookId' component={BookDetails} />\n            {/* <Route exact path='/home' render={props => <Timeline {...props} user={this.state.currentUser} /> } /> */}\n            <Route exact path='/home' render={props => <Timeline {...props} user={this.state.currentUser} />} />\n            {/* <Route exact path='/review/:bookId' render={props => <CreateReview {...props} user={this.state.currentUser} />} />\n            <Route exact path='/discuss/:bookId' render={props => <CreateDiscussion {...props} user={this.state.currentUser} />} /> */}\n          </Switch>\n      \n      </div>\n    )\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}