{"version":3,"sources":["services/AuthService.js","components/Authentication/Login.js","components/Authentication/Signup.js","services/SearchService.js","components/Search.js","components/Landing.js","services/UserInfoService.js","components/UserProfile.js","components/NavBar.js","components/AccountDetails.js","components/Bookshelves.js","components/Create/Discussion.js","components/DiscussionDetails.js","components/Create/Review.js","components/ReviewDetails.js","components/Reviews.js","components/Discussions.js","components/Followers.js","components/Following.js","components/BookDetails.js","components/Timeline.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["baseURL","process","REACT_APP_DOMAINURL","service","axios","create","withCredentials","AUTH_SERVICE","signup","userData","console","log","post","login","logout","getAuthenticatedUser","env","get","Login","state","email","password","message","loggedInUser","handleInputChange","event","target","name","value","setState","handleFormSubmission","preventDefault","then","responseFromServer","user","data","props","onUserChange","history","push","_id","catch","err","response","onSubmit","this","className","type","placeholder","onChange","React","Component","Signup","username","SEARCH_SERVICE","getSearchedBooks","query","getBookDetails","bookId","Search","handleInput","handleSearch","toLowerCase","responseFromDB","searchResult","searchOutput","autoComplete","length","map","to","id","volumeInfo","title","Landing","newHere","handleNewHereState","onClick","ACCOUNT_SERVICE","getUserProfile","accountId","getTimeline","editAccountDetails","newAccountDetails","deleteAccount","followAndUnfollow","getUsersShelves","getUsersHasRead","getUsersWantToRead","addBookToHasReadList","addBookToWantToReadList","removeBookFromWantToReadList","removeBookFromHasReadList","getUsersReviews","userId","postReviewToBook","newReview","viewSingleReview","reviewId","updateReview","editedReview","deleteReview","startDiscussion","discussion","viewSingleDiscussion","discussionId","updateDiscussion","editedDiscussion","deleteDiscussion","replyToDiscussion","replyContent","UserProfile","isLoggedInUser","profile_picture","bio","userName","has_read","want_to_read","reviews","discussions","followers","following","getUserDetails","params","match","responseFromApi","photo","hasRead","wantToRead","handleFollowAndUnfollow","updatedCurrentUser","slice","Math","max","isFollowing","includes","isMyProfile","toString","src","alt","follower","review","book","image_url","NavBar","handleLogout","blah","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","AccountDetails","userAccountInfo","passwordHash","retreiveUserInfo","responseFromAPI","handleImageChange","files","handleSubmission","uploadData","FormData","append","editedUser","Bookshelves","booksHasRead","booksWantsToRead","user_id","getBookshelves","authorized","removeBookFromWantShelf","window","location","reload","removeBookFromHasReadShelf","Discussion","discussionContent","DiscussionDetails","editMode","getSingleDiscussion","discussionFromDB","singleDiscussion","handleEditMode","saveEditChanges","deletedDiscussion","updatedDiscussionWithReply","author","authors","content","replies","reply","Review","numOfStars","addReviewToBook","reviewProps","min","ReviewDetails","getSingleReview","reviewFromDB","singleReview","updatedReview","deletedReview","subtitle","Reviews","getUserReviews","reviewsFromDB","google_books_id","Discussions","getUsersDiscussions","userFromDB","Followers","isLoggedIn","getUserFollowers","Follow","getUserFollowing","BookDetails","paramId","getDetails","bookFromDB","addToHasRead","addedBook","addToWantToRead","description","Timeline","usersTheyFollowAndPosts","viewingDiscussions","getUsersTimeline","timelinePosts","switchToDiscussionsView","style","color","personTheyFollow","Footer","App","currentUser","updateUser","exact","path","render","component","Following","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.03b7ca3c.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseURL = process.env.REACT_APP_DOMAINURL\n// const baseURL = 'https://boookr.herokuapp.com'\nconst service = axios.create({\n    baseURL,\n    withCredentials: true\n});\n\nconst AUTH_SERVICE = {\n    signup(userData) {\n        console.log(baseURL)\n        return service.post('/api/signup', userData)\n    },\n    login(userData) {\n        return service.post('/api/login', userData)\n    },\n    logout() {\n        return service.post('/api/logout', {})\n    },\n    getAuthenticatedUser() {\n        console.log({baseURL, env: process.env})\n        return service.get('/api/isLoggedIn')\n    }\n}\n\nexport default AUTH_SERVICE;","import React from 'react';\nimport { Link } from 'react-router-dom'\n\nimport AUTH_SERVICE from '../../services/AuthService';\n\nexport default class Login extends React.Component {\n  state = {\n    email: '',\n    password: '',\n    message: null,\n    loggedInUser: []\n  };\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n\n  handleFormSubmission = event => {\n    event.preventDefault();\n\n    const { email, password } = this.state;\n\n    AUTH_SERVICE.login({ email, password })\n      .then(responseFromServer => {\n        // console.log(responseFromServer.data)\n        const { user } = responseFromServer.data;\n        // console.log(this.props)\n        // Lift the user object to the App.js\n        this.props.onUserChange(user);\n\n        // Redirect user to home page after successful sign up\n        this.props.history.push(`/profile/${user._id}`);\n        console.log('this was called')\n      })\n      .catch(err => {\n        if (err.response && err.response.data) {\n          return this.setState({ message: err.response.data.message });\n        }\n      });\n  };\n\n  render() {\n    // console.log(this.state.loggedInUser)\n    return (\n      <>\n          <form onSubmit={this.handleFormSubmission} className='landing-form'>\n            <label>\n              Email:\n              <input\n                name='email'\n                type='email'\n                placeholder='ana@ironhack.com'\n                value={this.state.email}\n                onChange={this.handleInputChange}\n              />\n            </label>\n\n            <label>\n              Password:\n              <input\n                name='password'\n                type='password'\n                placeholder='**********'\n                value={this.state.password}\n                onChange={this.handleInputChange}\n              />\n            </label>\n            <button type='submit' className='details-btn'> Login </button>\n            \n          </form>\n\n          {/* if the message is not NULL then show the message */}\n          {this.state.message && <div> {this.state.message} </div>}\n      </>\n    );\n  }\n}","import React from 'react';\n\nimport AUTH_SERVICE from '../../services/AuthService';\n\nexport default class Signup extends React.Component {\n  state = {\n    username: '',\n    email: '',\n    password: '',\n    message: null\n  };\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  handleFormSubmission = event => {\n    event.preventDefault();\n\n    const { username, email, password } = this.state;\n\n    AUTH_SERVICE.signup({ username, email, password })\n      .then(responseFromServer => {\n        const { user } = responseFromServer.data;\n\n        // Lift the user object to the App.js\n        // this.props.onUserChange(user);\n\n        // Redirect user to home page after successful sign up\n        this.props.history.push(`/profile/${user._id}`);\n      })\n      .catch(err => {\n        if (err.response && err.response.data) {\n          return this.setState({ message: err.response.data.message });\n        }\n      });\n  };\n\n  render() {\n    return (\n      <>\n       \n\n          <form onSubmit={this.handleFormSubmission} className='landing-form'>\n            <label>\n              Username:\n              <input\n                name='username'\n                type='text'\n                placeholder='ana'\n                value={this.state.username}\n                onChange={this.handleInputChange}\n              />\n            </label>\n\n            <label>\n              Email:\n              <input\n                name='email'\n                type='email'\n                placeholder='ana@ironhack.com'\n                value={this.state.email}\n                onChange={this.handleInputChange}\n              />\n            </label>\n\n            <label>\n              Password:\n              <input\n                name='password'\n                type='password'\n                placeholder='**********'\n                value={this.state.password}\n                onChange={this.handleInputChange}\n              />\n            </label>\n\n            <button className='details-btn'> Signup </button>\n          </form>\n\n          {/* if the message is not NULL then show the message */}\n          {this.state.message && <div> {this.state.message} </div>}\n    \n      </>\n    );\n  }\n}","import axios from 'axios'\nconst baseURL = process.env.REACT_APP_DOMAINURL\n// const baseURL = 'https://boookr.herokuapp.com'\n\nconst service = axios.create({\n    baseURL,\n    withCredentials: true\n});\n\nconst SEARCH_SERVICE = {\n    service,\n\n    getSearchedBooks(query) {\n        return service.post(`/api/book-search?q=${query}`)\n    },\n    getBookDetails(bookId){\n        return service.get(`/api/details/${bookId}`)\n    }\n}\n\nexport default SEARCH_SERVICE;","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport SEARCH_SERVICE from '../services/SearchService'\n\nexport class Search extends Component {\n\nconstructor(props) {\n    super(props)\n\n    this.state = {\n         searchResult: [],\n         query: ''\n    }\n}\n\n    \n    handleInput = (event) => {\n        this.setState({\n            query: event.target.value\n        })\n    }\n\n\n    handleSearch = () => {\n       SEARCH_SERVICE\n            .getSearchedBooks(this.state.query.toLowerCase())\n            .then(responseFromDB => {\n                // console.log(responseFromDB.data.searchOutput)\n                this.setState({\n                    searchResult: responseFromDB.data.searchOutput\n                })\n            })\n            .catch(err => console.log(err))\n    }\n\n    render() {\n        // console.log(this.state.query)\n        console.log(this.state.searchResult)\n        return (\n            <div className='search-container'>\n            <form className=\"form-inline\" onChange={this.handleSearch}>\n                <input placeholder='Search books' className=\"form-control mr-sm-2\" name='query' type='search' autoComplete=\"off\" value={this.state.query} onChange={this.handleInput} />\n                {/* <button className=\"btn tan-btn my-2 my-sm-0\" type=\"submit\">Search</button> */}\n            </form>\n\n            {this.state.query.length > 0 && <div className='search-results'>\n                {this.state.searchResult.map(searchResult => {\n                    return(\n                        <div className='single-result'>\n                            {/* <img src={searchResult.volumeInfo.imageLinks?.smallThumbnail} alt='book-thumbnail' className='book-thumbnail'/> */}\n                            <Link to={`/bookinfo/${searchResult?.id}`}>{searchResult.volumeInfo.title}</Link>\n                        </div>\n                    )\n                })}\n            </div>}\n            </div>\n        )\n    }\n}\n\nexport default Search;\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport Login from './Authentication/Login'\nimport Signup from './Authentication/Signup'\nimport Search from './Search'\n// import NavBar from './NavBar'\n// import Signup from './Authentication/Signup'\n// import Login from './Authentication/Login'\n// import Search from './Search'\n\n\nexport default class Landing extends Component {\n\n    state = {\n        newHere: true\n    }\n\n    handleNewHereState = (event) => {\n        event.preventDefault();\n        this.setState({\n            newHere: !this.state.newHere\n        })\n    }\n\n    render() {\n        return (\n            <div className='container-desktop'>\n                <div className='row landing-cover'>\n                    <div className='col-lg-8'>\n                        <h1>Join our community of readers</h1>\n                    </div>\n                    <div className='auth-landing col-lg-4'>  \n                        {/* <Login /> */}\n                        {!this.state.newHere && <>\n                            <div className='landing-login'>\n                                <h3>Welcome to Bookr</h3>\n                                <Login />\n                                <hr />\n                            </div>\n                            <div>\n                                <Link to='/' onClick={event => this.handleNewHereState(event)}>New here? Create an account for free!</Link>   \n                            </div>\n                        </>}\n                        {this.state.newHere && <div>\n                        <div className='landing-login'>\n                            <h3>Sign up and start reading today!</h3>\n                            <Signup />\n                            <hr />\n                        </div>\n                        <div>\n                            <Link to='/' onClick={event => this.handleNewHereState(event)}>Already have an account? Log in</Link>\n                        </div>\n                            \n                        </div>}\n                    </div>\n                    {/* <img src='https://media.istockphoto.com/photos/composition-with-books-on-the-table-picture-id1158413597?k=6&m=1158413597&s=612x612&w=0&h=bmVCZh_ephJcCbbzAw0bFNk0KYlDL4k_4a5xZeFcqaw=' alt='cover' className='landing-cover'></img> */}\n                </div>\n                <div className='row search-section'>\n                    <div className='col-md-3'>\n                        <h2>Search your favorite books</h2>\n                        <p>Bookr's search engine is powered by the Google Books API, one of the most extensive book APIs available.</p>\n                        <Search />\n                    </div>\n                    <div className='col-md-9 popular-searches'>\n                        <h2>Popular Searches</h2>\n                        <ul className='searches-landing'>\n                            <li><Link to='bookinfo/9mEh1dJTw5cC' className='link-white-txt'>Doctor Sleep</Link></li>\n                            <li><Link to='/bookinfo/qYqHPwAACAAJ' className='link-white-txt'>Giovanni's Room</Link></li>\n                            <li><Link to='/bookinfo/PxNcDwAAQBAJ' className='link-white-txt'>The 7 1/2 Deaths of Evelyn Hardcastle</Link></li>\n                            <li><Link to='/bookinfo/z9Q99X-OOtAC' className='link-white-txt'>The Secret</Link></li>\n                            <li><Link to='/bookinfo/Y_VuDwAAQBAJ' className='link-white-txt'>Sharp Objects</Link></li>\n                            <li><Link to='/bookinfo/hxCkDgAAQBAJ' className='link-white-txt'>The Woman in the Window</Link></li>\n                            <li><Link to='/bookinfo/WrL9de30FDMC' className='link-white-txt'>The Girl with the Dragon Tattoo</Link></li>\n                            <li><Link to='/bookinfo/kotPYEqx7kMC' className='link-white-txt'>1984</Link></li>\n                            <li><Link to='/bookinfo/lclWAAAAQBAJ' className='link-white-txt'>If Beale Street Could Talk</Link></li>\n                            <li><Link to='/bookinfo/SGAZdjNfruYC' className='link-white-txt'>Animal Farm</Link></li>\n                        </ul>\n                    </div>\n                </div>\n                <div className='row features-section'>\n                <div className='container-fluid'>\n                    <div className='row features-title'>\n                        <h1>Why Bookr?</h1>\n                        <hr />\n                    </div>\n                    <div className='row'>\n                    <div className='col-lg-4 try-search'>\n                        {this.state.newHere && <>\n                            <h2>Get started</h2>\n                            <Signup />\n                            <hr />\n                            <Link to='/' onClick={event => this.handleNewHereState(event)}>Already have an account? Log in</Link>\n                        </>}\n                        {!this.state.newHere && <>\n                            <h2>Login</h2>\n                            <Login />\n                            <hr />\n                            <Link to='/' onClick={event => this.handleNewHereState(event)}>New here? Create an account for free!</Link>\n                        </>}\n                    </div>\n                    <div className='col-lg-8'>\n                    <div className='container-fluid'>\n        \n                        <div className='row features-container'>\n                            <div className='col-lg-6'>\n                                <div className='feat-item'>\n                                   <h3>Connect with other readers</h3>\n                                   <p>Follow your friends to keep up with their recent reviews and discussions</p>\n                                </div>\n                            </div>\n                            <div className='col-lg-6'>\n                                <div className='feat-item'>\n                                    <h3>Rate and review books you've read</h3>\n                                    <p>Share your thoughts on your favorite (and least favorite) books with the Bookr community</p>\n                                </div>\n                            </div>\n                        </div>\n                        <div className='row'>\n                            <div className='col-lg-6'>\n                                <div className='feat-item'>\n                                    <h3>Start and join discussions</h3>\n                                    <p>Have something you want to talk about? Start discussions with the community to get the conversation started, or simply join in to existing discussions</p>\n                                </div>\n                            </div>\n                            <div className='col-lg-6'>\n                                <div className='feat-item'>\n                                    <h3>Create bookshelves</h3>\n                                    <p>Keep track of books you've read and want to read in your personal online bookshelf</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                \n                \n                    </div>\n                </div>\n                \n                \n                </div>\n            </div>\n        )\n    }\n}\n\n\n","import axios from 'axios'\nconst baseURL = process.env.REACT_APP_DOMAINURL\n// const baseURL = 'https://boookr.herokuapp.com'\n\nconst service = axios.create({\n    baseURL,\n    withCredentials: true\n});\n\n// const image_service = axios.create({\n//     baseURL,\n//     withCredentials: true,\n//     headers: { \"Content-Type\": \"multipart/form-data\" }\n// });\n\n\nconst ACCOUNT_SERVICE = {\n    service,\n\n    getUserProfile(accountId) {\n        return service.get(`/api/account/${accountId}`)\n    },\n\n    getTimeline(){\n        return service.get('/api/posts')\n    },\n\n    editAccountDetails(newAccountDetails) {\n        return service.post(`/api/account/edit`, newAccountDetails)\n    },\n\n    deleteAccount() {\n        return service.post(`/api/delete-account`, {})\n    },\n\n    followAndUnfollow(accountId) {\n        return service.post(`/api/follow/${accountId}`, {})\n    },\n\n    getUsersShelves(accountId) {\n        return service.get(`/api/shelves/${accountId}`)\n    },\n    \n    getUsersHasRead(accountId) {\n        return service.get(`/api/has-read/${accountId}`)\n    },\n\n    getUsersWantToRead(accountId) {\n        return service.get(`/api/want-to-read/${accountId}`)\n    },\n\n    addBookToHasReadList(bookId) {\n        return service.post(`/api/add-to-has-read/${bookId}`, {})\n    },\n\n    addBookToWantToReadList(bookId) {\n        return service.post(`/api/add-to-want-to-read/${bookId}`, {})\n    },\n\n    removeBookFromWantToReadList(bookId) {\n        return service.post(`/api/remove-want-book/${bookId}`, {}) \n    },\n\n    removeBookFromHasReadList(bookId) {\n        return service.post(`/api/remove-has-book/${bookId}`, {})\n    },\n\n    getUsersReviews(userId) {\n        return service.get(`/api/reviews/${userId}`)\n    },\n\n    postReviewToBook(bookId, newReview) {\n        return service.post(`/api/review/${bookId}`, newReview)\n    },\n\n    viewSingleReview(reviewId){\n        return service.get(`/api/review/${reviewId}`)\n    },                \n\n    updateReview(reviewId, editedReview){\n        return service.post(`/api/review/edit/${reviewId}`, editedReview)\n    },\n\n    deleteReview(reviewId){\n        return service.post(`/api/review/delete/${reviewId}`, {})\n    },\n\n    startDiscussion(bookId, discussion) {\n        return service.post(`/api/start-discussion/${bookId}`, discussion)\n    },\n\n    viewSingleDiscussion(discussionId){\n        return service.get(`/api/discuss/${discussionId}`)\n    },\n\n    updateDiscussion(discussionId, editedDiscussion){\n        return service.post(`/api/discuss/edit/${discussionId}`, editedDiscussion)\n    },\n\n    deleteDiscussion(discussionId){\n        return service.post(`/api/delete-discuss/${discussionId}`, {})\n    },\n\n    replyToDiscussion(discussionId, replyContent){\n        return service.post(`/api/discuss/${discussionId}/reply`, replyContent)\n    }\n\n}\n\nexport default ACCOUNT_SERVICE;","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport ACCOUNT_SERVICE from '../services/UserInfoService'\n\nexport default class UserProfile extends Component {\n    state = {\n        isLoggedInUser: false,\n        profile_picture: '',\n        bio: '',\n        userName: '',\n        has_read: [],\n        want_to_read: [],\n        reviews: [],\n        discussions: [],\n        followers: [],\n        following: []\n    }\n\n    componentDidMount() {\n        this.getUserDetails();\n    }\n\n    getUserDetails =  () => {\n        const { params } = this.props.match\n        ACCOUNT_SERVICE\n            .getUserProfile(params.accountId)\n            .then(responseFromApi => {\n                this.props.onUserChange(responseFromApi.data.user)\n                // console.log(responseFromApi);\n                this.setState({\n                    isLoggedInUser: true,\n                    profile_picture: responseFromApi.data.user.photo,\n                    userName: responseFromApi.data.user.username,\n                    has_read: responseFromApi.data.user.hasRead,\n                    want_to_read: responseFromApi.data.user.wantToRead,\n                    reviews: responseFromApi.data.user.reviews,\n                    discussions: responseFromApi.data.user.discussions,\n                    followers: responseFromApi.data.user.followers,\n                    following: responseFromApi.data.user.following,\n                    bio: responseFromApi.data.user.bio\n                })\n            })\n            .catch(err => console.log(err))\n    }\n\n    handleFollowAndUnfollow = () => {\n        ACCOUNT_SERVICE\n            .followAndUnfollow(this.props.match.params.accountId)\n            .then(responseFromApi => this.props.onUserChange(responseFromApi.data.updatedCurrentUser))\n            .catch(err => console.log(err))\n    }\n\n\n    render() {\n        // console.log(this.props.user?._id)\n        // console.log('props', this.props)\n        // console.log(this.props?.user?.user?._id.toString() === this.props.match.params.accountId.toString())\n        // console.log(this.state.isLoggedInUser)\n        // console.log({user: this.props?.user?.user?._id, params: this.props.match.params.accountId})\n        // if (!this.props.user?.user?._id) return  <div>Loading....</div>\n        const slicedReviews = this.state.reviews.slice(Math.max(this.state.reviews.length-3, 0))\n        const slicedDiscussions = this.state.discussions.slice(Math.max(this.state.discussions.length-3, 0))\n        if (!this.state.isLoggedInUser) return <div>Loading...</div>\n        const isFollowing = this.props?.user?.user?.following.includes(this.props.match.params.accountId)\n        // console.log(this.state.following)\n        const isMyProfile = this.props?.user?.user?._id.toString() === this.props.match.params.accountId.toString();\n        // console.log(this.state.reviews.length)\n        return (\n            // <div>\n            //     <div className='container-fluid site-container'>\n            //         <div className='row'>\n            //             <div className='col-lg-9'>\n            //                 <div className='container user-info-top'>\n            //                     <div className='row info-content'>\n            //                     <div>\n            //                         <img src={this.state.profile_picture} alt='user-avi' className='user-avi'/>\n            //                     </div>\n            //                     <div className='user-top-text'>\n            //                         <h2 className='username-profile'>{this.state.userName}</h2>\n            //                         {isMyProfile && <p><Link to='/' className='link-profile-bio'>edit profile</Link></p>}\n            //                         <p className='user-bio'>{this.state.bio}</p>\n            //                     </div>\n            //                     </div>\n            //                 </div>\n            //             <div className='container'>    \n            //                 <div className='section-header'>\n            //                     <h3 className='username-profile'>{this.state.userName} recently reviewed:</h3>\n            //                 </div>\n                           \n            //                 <div className='row review-container'>\n            //                 {slicedReviews.map(review => {\n            //                     return(\n                                   \n            //                     <div className=\"col-sm-3\">\n            //                         <div class=\"card\" style={{width: \"18rem;\"}}>\n            //                         <img class=\"card-img-top\" src={review.book.image_url} alt=\"Card cap\" />\n            //                         <div class=\"card-body\">\n            //                             <h5 class=\"card-title\">{review.numOfStars} / 5</h5>\n            //                             <p class=\"card-text\">{review.content}</p>\n            //                         </div>\n            //                         <div class=\"card-body\">\n            //                             <Link to={`reviewinfo/${review._id}`} className=\"card-link\">Details</Link>\n            //                         </div>\n            //                         </div>\n            //                     </div>\n            //                 )})}\n                                \n            //                 </div>\n            //             </div>\n            //             <div className='container testing-style'>\n            //             <div className='section-header'>\n            //                     <h3 className='username-profile'>{this.state.userName} recently discussed:</h3>\n            //                 </div>\n            //                 <div className='row discussion-container'>\n            //                 {slicedDiscussions.map(discussion => {\n            //                     return(\n                                   \n            //                     <div className=\"col-sm-3\">\n            //                         <div class=\"card\" style={{width: \"18rem;\"}}>\n            //                         <img class=\"card-img-top\" src={discussion.book.image_url} alt=\"Card cap\" />\n            //                         <div class=\"card-body\">\n            //                             <h5 class=\"card-title\">{discussion.title}</h5>\n            //                             <p class=\"card-text\">{discussion.discussionContent}</p>\n            //                         </div>\n            //                         <div class=\"card-body\">\n            //                             <Link to={`discussinfo/${discussion._id}`} className=\"card-link\">Details</Link>\n            //                         </div>\n            //                         </div>\n            //                     </div>\n            //                 )})}\n                                \n            //                 </div>\n            //                 </div>\n            //                 </div>\n            //                 <div className='col-lg-3'>\n            //                 <div className='profile-links-container'>\n            //                     <ul className='profile-links'>\n            //                     {!isMyProfile && isFollowing && <li>\n            //                         <button onClick={this.handleFollowAndUnfollow}>Unfollow</button>\n            //                     </li>}\n            //                     {!isMyProfile && !isFollowing && <li>\n            //                         <button onClick={this.handleFollowAndUnfollow}>Follow</button>\n            //                     </li>}\n            //                         <li>\n            //                         <img src=\"https://img.icons8.com/ios/50/000000/star-half.png\" alt='review-icon'/>\n            //                             <Link className='profile-li' to={`/reviews/${this.props.match.params.accountId}`}>Reviews</Link>\n            //                         </li>\n            //                         <li>\n            //                         <img src=\"https://img.icons8.com/fluent-systems-regular/48/000000/comment-discussion.png\" alt='discuss-icon'/>\n            //                             <Link className='profile-li' to={`/discussions/${this.props.match.params.accountId}`}>Discussions</Link>\n            //                         </li>\n            //                         <li>\n            //                         <img src=\"https://img.icons8.com/pastel-glyph/50/000000/books.png\" alt='shelf-icon'/>\n            //                             <Link className='profile-li' to={`/shelves/${this.props.match.params.accountId}`}>Shelves</Link>\n            //                         </li>\n            //                     </ul>\n            //                 </div>\n            //                 <div className='usr-follow'>\n            //                      <div className='user-following'>\n            //                         <p>Following</p>\n            //                         {this.state.following.map(following => {\n            //                             return(\n            //                                 <Link to={`/profile/${following?._id}`}>\n            //                                     <img src={following?.photo} alt='usr-avi' className='user-avi-side'/>\n            //                                 </Link>\n            //                             )\n            //                         })}\n            //                      </div>\n            //                      <div className='user-followers'>\n            //                         <p>Followers</p>\n            //                         {this.state.followers.map(follower => {\n            //                             return(\n            //                                 <Link to={`/profile/${follower?._id}`}>\n            //                                 <img src={follower?.photo} alt='usr-avi' className='user-avi-side'/>\n            //                                 </Link>\n            //                             )\n            //                         })}\n            //                      </div>\n            //                 </div>\n            //             </div>\n            //             </div>\n            //         </div>\n            //     </div>\n\n<div className='container-fluid site-container'>\n    <div className='row'>\n        <div className='col-lg-4'>\n        <div className='container user-info'>\n                <div className='row user-info-top'>\n                    <div className='profile-name-img'>\n                        <img src={this.state.profile_picture} alt='user-avi' className='usr-avi-timeline'/>\n                        <h4 className='username-profile'>{this.state.userName}</h4>\n                    </div>\n                    <div className='user-info-right'>\n                    {!isMyProfile && isFollowing && <>\n                            <button onClick={this.handleFollowAndUnfollow} className='unfollow-btn'>Unfollow</button>\n                                 </>}\n                                 {!isMyProfile && !isFollowing && <>\n                                     <button onClick={this.handleFollowAndUnfollow} className='follow-btn'>Follow</button>\n                                 </>}\n                    {isMyProfile && <>\n                        <Link to={`/account/${this.props.user?.user?._id}`}><img src=\"https://img.icons8.com/pastel-glyph/64/000000/edit--v1.png\" alt='edit-profile'/></Link>\n                    </>}\n                    </div>\n                </div>\n                {/* <div className='row'>\n                    <ul className='profile-followers'>\n                        <li>{this.state.followers.length} Followers</li>\n                        <li>{this.state.following.length} Following</li>\n                    </ul>\n                </div> */}\n                <div className='row'>\n                    <ul className='profile-links'>\n                        <li>\n                            <img src=\"https://img.icons8.com/ios/50/000000/star-half.png\" alt='review-icon'/>\n                            <Link className='profile-li' to={`/reviews/${this.props.match.params.accountId}`}>{this.state.reviews.length===1 && <>1 Review</>}{this.state.reviews.length===0 || this.state.reviews.length > 1 && <>{this.state.reviews.length} Reviews</>}</Link>\n                        </li>\n                        <li>\n                            <img src=\"https://img.icons8.com/fluent-systems-regular/48/000000/comment-discussion.png\" alt='discuss-icon'/>\n                            <Link className='profile-li' to={`/discussions/${this.props.match.params.accountId}`}>{this.state.discussions.length===1 && <>1 Discussion</>}{this.state.discussions.length===0 || this.state.discussions.length > 1 && <>{this.state.discussions.length} Discussions</>}</Link>\n                        </li>\n                        <li>\n                        <img src=\"https://img.icons8.com/pastel-glyph/50/000000/books.png\" alt='shelf-icon'/>\n                        <Link className='profile-li' to={`/shelves/${this.props.match.params.accountId}`}>{this.state.want_to_read.length+this.state.has_read.length} Shelves</Link>\n                        </li>\n                    </ul>\n                </div>\n                <div className='row user-profile-bio'>\n                    <p className='user-bio'>{this.state.bio}</p>\n                </div>\n                <hr />\n                <div className='row'>\n                <div className='usr-follow'>\n                                <div className='user-followers'>\n                                     <p>{this.state.followers.length} Followers</p>\n                                     {this.state.followers.map(follower => {\n                                         return(\n                                             <Link to={`/profile/${follower?._id}`}>\n                                             <img src={follower?.photo} alt='usr-avi' className='user-avi-side'/>\n                                             </Link>\n                                         )\n                                     })}\n                                  </div>\n                                  <div className='user-following'>\n                                     <p>{this.state.following.length} Following</p>\n                                     {this.state.following.map(following => {\n                                         return(\n                                             <Link to={`/profile/${following?._id}`}>\n                                                 <img src={following?.photo} alt='usr-avi' className='user-avi-side'/>\n                                             </Link>\n                                         )\n                                     })}\n                                  </div>\n                                  \n                             </div>\n                </div>\n            </div>\n        </div>\n        <div className='col-lg-8'>\n            <div className='container'>    \n                            <div className='section-header'>\n                                <h3 className='username-profile'>Recent Reviews</h3>\n                            </div>\n                           \n                            <div className='row review-container'>\n                            <ul>\n                            {this.state.reviews.map(review => {\n                                return(\n                                   \n                                <li>\n                                    <Link to={`/reviewinfo/${review._id}`}>\n                                        <img src={review.book?.image_url} alt='book-cover'/>\n                                    </Link>\n                                    \n                                </li>\n                            )})}\n                            </ul>\n                               \n                            </div>\n                        </div>\n                        <div className='container testing-style'>\n                        <div className='section-header'>\n                                <h3 className='username-profile'>Recent Discussions</h3>\n                            </div>\n                            <div className='row discussion-container'>\n                            <ul>\n                            {this.state.discussions.map(discussion => {\n                                return(\n                                   \n                                <li>\n                                    <Link to={`/discussinfo/${discussion._id}`}>\n                                        <img src={discussion.book.image_url} alt='book-cover'/>\n                                    </Link>\n                                </li>\n                            )})}\n                            </ul>\n                            \n                                \n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n           \n        )\n    }\n}\n\n\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport AUTH_SERVICE from '../services/AuthService'\nimport Search from './Search'\nimport '../App.css'\n\nexport default class NavBar extends Component {\n    // state = {\n    //     user_id: this.props.user?._id || null\n    // }\n\n    // componentDidMount() {\n    //     this.getLoggedInUser();\n    // }\n\n    // getLoggedInUser = () => {\n    //     AUTH_SERVICE\n    //         .getAuthenticatedUser()\n    //         .then(responseFromDB => {\n    //             responseFromDB.data.user ? \n    //             this.setState({\n    //                 isLoggedIn: true,\n    //                 user_id: responseFromDB.data.user._id\n    //             }) :\n    //             this.setState({\n    //                 isLoggedIn: false\n    //             })\n    //         })\n    // }\n\n    handleLogout = () => {\n        console.log('route called')\n        AUTH_SERVICE\n            .logout()\n            .then((blah) => {\n                console.log('logged out!', {blah});\n                this.props.onUserChange(null);\n            //     this.setState({\n            //     isLoggedIn: false\n            // })\n            // this.props.history.push('/');\n        })\n            .catch(err => console.log(err))\n    }\n\n    \n\n\n    render() {\n        console.log({props: this.props})\n        return (\n            <nav className=\"navbar navbar-light nav-font\">\n                <div>\n                    <Link to='/home' className='home-btn'><h2>BOOKR.</h2></Link>\n                </div>\n                {this.props.user && \n                <>\n                    <div>\n                    <ul className='nav-ul'>\n                        <li>\n                            <Link className='nav-links' to='/home'>Home</Link>\n                        </li>\n                        <li>\n                            <Link className='nav-links' to={`/shelves/${this.props.user?.user?._id}`}>My Shelves</Link>\n                        </li>\n                        <li>\n                        <div className=\"dropdown\">\n                            <button className=\"btn tan-btn dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                               Account\n                            </button>\n                            <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n                                <Link className=\"dropdown-item\" to={`/profile/${this.props.user?.user?._id}`}>Profile</Link>\n                                <Link className=\"dropdown-item\" to={`/account/${this.props.user?.user?._id}`}>Account Details</Link>\n                                <Link className=\"dropdown-item\" to='/' onClick={this.handleLogout}>Logout</Link>\n                            </div>\n                        </div>\n                        </li>\n                    </ul>\n                </div>\n                <div>\n                    <Search />\n                </div>\n                </>\n            }\n            {this.props.user === null  &&\n                <div>\n                    {/* <button className='logged-out-login'><Link to='/login' className='nav-links'>Log In</Link></button>\n                    <button className='logged-out-signup details-btn'><Link to='/signup' className='link-white-txt'>Sign Up</Link></button> */}\n                    <Search />\n                </div>}\n               \n            </nav>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport ACCOUNT_SERVICE from '../services/UserInfoService'\n\nexport default class AccountDetails extends Component {\n\n    state = {\n        // isLoggedInUser: false,\n        userAccountInfo: [],\n        email: this.props.user?.user?.email,\n        bio: this.props.user?.user?.bio,\n        username: this.props.user?.user?.username,\n        photo: this.props.user?.user?.photo,\n        password: this.props.user?.user?.passwordHash\n\n    }\n\n    componentDidMount() {\n        this.retreiveUserInfo();\n    }\n\n    retreiveUserInfo = () => {\n        // const { params } = this.props.match;\n            ACCOUNT_SERVICE\n                .getUserProfile(this.props?.user?.user?._id)\n                .then(responseFromAPI => {\n                    // console.log(responseFromAPI.data.user)\n                    this.setState({\n                        userAccountInfo: responseFromAPI.data.user\n                        // isLoggedInUser: responseFromAPI.data.authorized\n                    })\n                })\n    }\n\n    handleInputChange = (event) => {\n        console.log(event.target)\n        const { name, value } = event.target;\n        this.setState({ [name]: value });\n       \n    }\n\n    handleImageChange = (event) => {\n        console.log(event.target)\n        const { files } = event.target;\n\n        this.setState({ photo: files[0] });\n    };\n\n    handleSubmission = (event) => {\n        event.preventDefault();\n\n        const { email, bio, username, password, photo } = this.state\n        const uploadData = new FormData();\n\n        console.log(this.state)\n\n        uploadData.append(\"photo\", photo);\n        uploadData.append(\"email\", email);\n        uploadData.append(\"username\", username);\n        uploadData.append(\"bio\", bio);\n        uploadData.append(\"password\", password);\n\n        \n        ACCOUNT_SERVICE\n            .editAccountDetails(uploadData)\n            .then(editedUser => {\n                // this.fileInput.value='';\n                this.props.onUserChange(editedUser)\n            })\n            .catch(err => console.log(err))\n    }\n\n\n    render() {\n        console.log(this.state.photo)\n        console.log(this.state.password)\n        const isMyProfile = this.props?.user?.user?._id.toString() === this.props.match.params.accountId.toString();\n        return (\n            <>\n                {isMyProfile && \n                <div className='container page-container'>\n                <form onSubmit={(event) => this.handleSubmission(event)} className='bookr-form'>\n                    <label>\n                        Change profile picture\n                        <input type='file' name='photo' onChange={(event) => this.handleImageChange(event)} />\n                    </label>\n                    <label>\n                        Email Address\n                        <input type='email' name='email' onChange={this.handleInputChange} value={this.state.email} placeholder={`${this.state.email}`}/>\n                    </label>\n                    {/* <label>\n                        First Name\n                        <input type='text' placeholder={`${this.state.userAccountInfo.email}`}/>\n                    </label> */}\n                    <label>\n                        User Name\n                        <input type='text' name='username' onChange={this.handleInputChange} value={this.state.username} placeholder={`${this.state.username}`}/>\n                    </label>\n                    <label>\n                        Bio\n                        <input type='text' name='bio' onChange={this.handleInputChange} value={this.state.bio} placeholder={`${this.state.bio}`}/>\n                    </label>\n                    <label>\n                        Input password to change details\n                        <input type='password' placeholder='*******' name='password' value={this.state.password} autoComplete='off' onChange={this.handleInputChange}/>\n                    </label>\n                    <button type='submit'>Save Profile Settings</button>\n                </form>\n                </div>\n                }\n            </>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport ACCOUNT_SERVICE from '../services/UserInfoService'\n\nexport default class Bookshelves extends Component {\n    state = {\n        isLoggedInUser: false,\n        booksHasRead: [],\n        booksWantsToRead: [],\n        user_id: '',\n        username: ''\n    }\n\n    componentDidMount() {\n        this.getBookshelves();\n    }\n\n    getBookshelves = () => {\n        const { params } = this.props.match\n        ACCOUNT_SERVICE\n            .getUserProfile(params.accountId)\n            .then(responseFromDB => {\n                console.log(responseFromDB.data.user)\n                this.setState({\n                    booksHasRead: responseFromDB.data.user.hasRead,\n                    booksWantsToRead: responseFromDB.data.user.wantToRead,\n                    isLoggedInUser: responseFromDB.data.authorized,\n                    username: responseFromDB.data.user.username,\n                    user_id: responseFromDB.data.user._id \n\n                })\n            })\n            .catch(err => console.log(err))\n    }\n\n    removeBookFromWantShelf = (event) => {\n        // console.log(event)\n        ACCOUNT_SERVICE\n            .removeBookFromWantToReadList(event.target.id)\n            .then(responseFromDB =>  {\n                this.props.history.push(`/shelves/${this.props.match.params.accountId}`)\n                window.location.reload();\n            })\n            .catch(err => console.log(err))\n    }\n\n    removeBookFromHasReadShelf = (event) => {\n        ACCOUNT_SERVICE\n            .removeBookFromHasReadList(event.target.id)\n            .then(responseFromDB => {\n                this.props.history.push(`/shelves/${this.props.match.params.accountId}`)\n                window.location.reload();\n            })\n            .catch(err => console.log(err))\n    }\n\n\n\n    render() {\n        console.log(this.state.booksHasRead)\n        return (\n        <div className='container-fluid site-container'>\n            <div className='row'>\n                {this.state.booksHasRead.length > 0 && \n                <div className='col-lg-6'>\n                <div className='container'>\n                    <h1>Books user has read</h1>\n                    <div className='row'>\n                    {this.state.booksHasRead.map(book => {\n                        return (\n                            <div key={book._id}>\n                            <img src={book.image_url} alt='book-cvr' className='bookshelf-item'/>\n                                {/* <h2>{book.title}</h2>\n                                <h3>{book.subtitle}</h3>\n                                <h4>{book.authors.map(author => author)}</h4>\n                                <p>{book.description}</p> */}\n                                <button onClick={event => this.removeBookFromHasReadShelf(event)} className='review-dlt-btn' id={book._id}>Remove Book</button>\n                            </div>\n                        )\n                    })}\n                    </div>\n                    </div>\n                </div>}\n                {this.state.booksWantsToRead.length > 0 && \n                <div className='col-lg-6'>\n                <div className='container'>\n                    <h1>Books user wants to read</h1>\n                </div>\n                <div className='row'>\n                    {this.state.booksWantsToRead.map(book => {\n                        return(\n                            <div className='hover-ctrl' key={book._id}>\n                                <img src={book.image_url} className='bookshelf-item' alt='book-cvr' />\n                                {/* <button className='hover-btn' onClick={this.removeBookFromWantShelf} id={book._id}>Remove Book</button> */}\n                                {/* <img src=\"https://img.icons8.com/wired/64/000000/trash.png\" alt='trash' className='hover-btn' onClick={this.removeBookFromWantShelf} id={book._id}/> */}\n                                <button onClick={event => this.removeBookFromWantShelf(event)} id={book._id} className='review-dlt-btn'>Remove Book</button>\n                            </div>\n                        )\n                    })}\n                    </div>\n                </div>}\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport ACCOUNT_SERVICE from '../../services/UserInfoService'\n\nexport default class Discussion extends Component {\n\n    state = {\n        title: '',\n        discussionContent: ''\n    }\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({ [name]: value });\n    }\n\n    handleSubmission = (event) => {\n        event.preventDefault();\n        const { bookId } = this.props.match.params\n        const { title, discussionContent } = this.state\n        ACCOUNT_SERVICE\n            .startDiscussion(bookId, {title, discussionContent})\n            .then(response => {this.props.history.push(`/discussions/${this.props.user?.user?._id}`)})\n            .catch(err => console.log(err))\n    }\n\n    render() {\n        return (\n            <div className='container page-container'>\n                <form onSubmit={this.handleSubmission} className='bookr-form'>\n                    <label>\n                        Title: \n                        <input type='text' name='title' value={this.state.title} onChange={this.handleInputChange}/>\n                    </label>\n                    <label>\n                        Discussion: \n                        <input type='text' name='discussionContent' value={this.state.discussionContent} onChange={this.handleInputChange}/>\n                    </label>\n                    <button type='submit'>Start Discussion</button>\n                </form>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport ACCOUNT_SERVICE from '../services/UserInfoService'\n\nexport default class DiscussionDetails extends Component {\n    state = {\n        discussion: [],\n        title: '',\n        discussionContent: '',\n        replyContent: '',\n        editMode: false\n    }\n\n    componentDidMount() {\n        this.getSingleDiscussion();\n    }\n\n    getSingleDiscussion = () => {\n        ACCOUNT_SERVICE\n            .viewSingleDiscussion(this.props.match.params.discussionId)\n            .then(discussionFromDB => {\n                // console.log(discussionFromDB.data.singleDiscussion)\n                this.setState({\n                    discussion: discussionFromDB.data.singleDiscussion,\n                    title: discussionFromDB.data.singleDiscussion.title,\n                    discussionContent: discussionFromDB.data.singleDiscussion.discussionContent,\n                    editMode: false\n                })\n            })\n            .catch(err => console.log(err))\n    }\n\n    handleInputChange = (event) => {\n        const { name, value } = event.target;\n        this.setState({ [name]: value }); \n    }\n\n    handleEditMode = (event) => {\n        this.setState({\n            editMode: true\n        })\n    }\n\n    saveEditChanges = (event) => {\n        event.preventDefault();\n\n        const { title, discussionContent } = this.state\n        const { discussionId } = this.props.match.params\n\n        ACCOUNT_SERVICE\n            .updateDiscussion(discussionId, { title, discussionContent })\n            .then(updateDiscussion => this.props.history.push(`/discussinfo/${discussionId}`))\n            .catch(err => console.log(err))\n    }\n\n    deleteDiscussion = (event) => {\n        event.preventDefault();\n\n        const { discussionId } = this.props.match.params\n\n        ACCOUNT_SERVICE\n            .deleteDiscussion(discussionId)\n            .then(deletedDiscussion => this.props.history.push(`/discussions/${this.props.user?.user?._id}`))\n            .catch(err => console.log(err))\n    }\n\n    replyToDiscussion = (event) => {\n        event.preventDefault();\n\n        const { discussionId } = this.props.match.params;\n        const { replyContent } = this.state;\n        ACCOUNT_SERVICE\n            .replyToDiscussion(discussionId, { replyContent })\n            .then(updatedDiscussionWithReply => this.props.history.push(`/discussinfo/${discussionId}`))\n            .catch(err => console.log(err))\n    }\n\n\n\n    render() {\n       const { discussion } = this.state;\n       console.log(discussion)\n       const isMyProfile = this.props?.user?.user?._id.toString() === discussion.author?._id\n        return (\n\n            <div key={discussion._id} className='container-fluid site-container'>\n            <div className='row'>\n            <div className='post-container container'>\n                <div className='review-user row'>\n                <div className='to-left'>\n                    <img src={discussion.author?.photo} alt='user' className='usr-avi-timeline' />\n                    <Link to={`/profile/${discussion.author?._id}`}>{discussion.author?.username}</Link>\n                </div>\n                {isMyProfile && !this.state.editMode && <div className='to-right'>\n                        <button onClick={this.handleEditMode} className='edit-btn'>Edit discussion</button>\n                        <button onClick={event => this.deleteDiscussion(event)} className='dlt-btn'>Delete discussion</button>\n                    </div>}\n                </div>\n\n                <div className='post-content row'>\n                    <div className='post-book-img col-md-3'>\n                        <img src={discussion.book?.image_url} alt='book-cvr' />\n                    </div>\n                    {!this.state.editMode && <div className='post-text-content col-md-9'>\n                        <h4>{discussion.book?.title} by: {discussion.book?.authors}</h4>\n                        <h5>{discussion.title}</h5>\n                        <p>{discussion.discussionContent || discussion.content}</p>\n                    </div>}\n                    {isMyProfile && this.state.editMode && <div>\n                        <form onSubmit={event => this.saveEditChanges(event)} className='bookr-form'>\n                            <label>\n                                Title: \n                                <input type='text' name='title' value={this.state.title} onChange={this.handleInputChange}/>\n                            </label>\n                            <label>\n                                Discussion: \n                                <input type='text' name='discussionContent' value={this.state.discussionContent} onChange={this.handleInputChange}/>\n                            </label>\n                            <button type='submit'>Save Changes</button>\n                        </form>\n                    </div>}\n                </div>\n                <div className='replies-container row'>\n                    {discussion.replies?.length > 0 && \n                    <>\n                        {discussion.replies.map(reply => {\n                            return(\n                                <div className='single-reply container'>\n                                    <div className='row reply-user-info'>\n                                        <img src={reply.author?.photo} className='user-avi-side' alt='user-avi'/>\n                                        <p><Link to={`/profile/${reply.author?._id}`} className='thread-link'>{reply.author?.username}</Link></p>\n                                    </div>\n                                    <div className='row reply-content'>\n                                     <p>{reply.replyContent}</p>\n                                    </div>\n                                </div>\n                            )\n                        })}\n                    </>}\n                                    <div className='add-reply-container row'>\n                                        <img src={this.props.user?.user?.photo} alt='user-avi' className='user-avi-side' />\n                                        <form className='reply-form' onSubmit={event => this.replyToDiscussion(event)}>\n                                            <input type='text' name='replyContent' value={this.state.replyContent} placeholder='Leave a comment' onChange={this.handleInputChange} />\n                                            <button type='submit' className='reply-btn'>Reply</button>\n                                        </form>\n                                    </div> \n                </div>\n                </div>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport ACCOUNT_SERVICE from '../../services/UserInfoService'\n\nexport default class Review extends Component {\n\n    state = {\n        numOfStars: 0,\n        content: ''\n    }\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({ [name]: value });\n    }\n\n    addReviewToBook = (event) => {\n        event.preventDefault();\n        const { numOfStars, content } = this.state\n        const { bookId } = this.props.match.params\n        // const { userId } = this.props.user?.user?._id\n        // console.log(bookId, {numOfStars, content})\n        ACCOUNT_SERVICE\n        .postReviewToBook(bookId, {numOfStars, content})\n        .then(response => {\n            console.log({reviewProps: this.props.user?.user?._id})\n                \n                this.props.history.push(`/reviews/${this.props.user?.user?._id}`)\n            })\n            .catch(err => console.log(err))\n    }\n\n    render() {\n        // console.log(this.props.match.params.bookId)\n        const { numOfStars, content } = this.state\n        // console.log({numOfStars, content})\n        return (\n            <div className='container page-container'>\n                <form onSubmit={this.addReviewToBook} className='bookr-form'>\n                    <label>\n                        Rating / 5\n                        <input type='number' min='0' max='5' name='numOfStars' value={numOfStars} onChange={this.handleInputChange}/>\n                    </label>\n                    <label>\n                        Review\n                        <input type='text' name='content' value={content} onChange={this.handleInputChange}/>\n                    </label>\n                    <button type='submit'>Post Review</button>\n                </form>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport ACCOUNT_SERVICE from '../services/UserInfoService'\n\nexport default class ReviewDetails extends Component {\n    state = {\n        review: [],\n        numOfStars: 0,\n        content: '',\n        editMode: false\n    }\n\n    componentDidMount() {\n        this.getSingleReview();\n    }\n\n    getSingleReview = () => {\n        ACCOUNT_SERVICE\n            .viewSingleReview(this.props.match.params.reviewId)\n            .then(reviewFromDB => this.setState({ review: reviewFromDB.data.singleReview, numOfStars: reviewFromDB.data.singleReview.numOfStars, content: reviewFromDB.data.singleReview.content }))\n            .catch(err => console.log(err))\n    }\n\n\n    handleInputChange = (event) => {\n        const { name, value } = event.target;\n        this.setState({ [name]: value }); \n    }\n\n    handleEditMode = (event) => {\n        this.setState({\n            editMode: true\n        })\n    }\n\n    saveEditChanges = (event) => {\n        event.preventDefault();\n\n        const { numOfStars, content } = this.state\n        const { reviewId } = this.props.match.params\n\n        ACCOUNT_SERVICE\n            .updateReview(reviewId, { numOfStars, content })\n            .then(updatedReview => this.props.history.push(`/reviews/${this.props.user?.user?._id}`))\n            .catch(err => console.log(err))\n    }\n\n    deleteReview = (event) => {\n        event.preventDefault();\n\n        const { reviewId } = this.props.match.params\n\n        ACCOUNT_SERVICE\n            .deleteReview(reviewId)\n            .then(deletedReview => this.props.history.push(`/reviews/${this.props.user?.user?._id}`))\n            .catch(err => console.log(err))\n    }\n\n    render() {\n        const { review } = this.state\n        const isMyProfile = this.props?.user?.user?._id.toString() === review.author?._id\n        console.log(review)\n        return (\n            <div>\n                <div>\n                    <div>\n                        <img src={review.author?.photo} alt='user-avi' className='usr-avi-timeline' />\n                        <p>{review.author?.username}</p>\n                    </div>\n                    {isMyProfile && !this.state.editMode && <div>\n                        <button onClick={this.handleEditMode}>Edit Review</button>\n                        <button onClick={event => this.deleteReview(event)}>Delete Review</button>\n                    </div>}\n                </div>\n                <div>\n                    <div>\n                        <img src={review.book?.image_url} alt='book-cover' className='book-cover-timeline' />\n                    </div>\n                    <div>\n                        <h3>{review.book?.title}</h3>\n                        <h4>{review.book?.subtitle}</h4>\n                        <p>Written by: {review.book?.authors}</p>\n                    </div>\n                </div>\n                {isMyProfile && !this.state.editMode && <div>\n                    User Rating: {review.numOfStars} / 5\n                    <p>{review.content}</p>\n                </div>}\n                {isMyProfile && this.state.editMode &&\n                    <div key={review._id}>\n                            <form onSubmit={(event) => this.saveEditChanges(event)}>\n                                <label>\n                                    Stars / 5\n                                    <input type='number' min='0' max='5' name='numOfStars' value={this.state.numOfStars} onChange={this.handleInputChange}/>\n                                </label>\n                                <label>\n                                    Review\n                                    <input type='text' name='content' value={this.state.content} onChange={this.handleInputChange}/>\n                                </label>\n                                <button id={review._id} type='submit'>Save Changes</button>\n                            </form>\n                        </div> \n                }\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport ACCOUNT_SERVICE from '../services/UserInfoService'\n\nexport default class Reviews extends Component {\n    state = {\n        // isLoggedInUser: false,\n        reviews: []\n        // editMode: false\n\n    }\n\n    componentDidMount(){\n        this.getUserReviews();\n    }\n\n    getUserReviews = () => {\n        ACCOUNT_SERVICE\n            .getUsersReviews(this.props.match.params.accountId)\n            .then(reviewsFromDB => {\n                // console.log(reviewsFromDB)\n                this.setState({\n                    // isLoggedInUser: reviewsFromDB.data.authorized,\n                    reviews: reviewsFromDB.data.reviews\n                })\n            })\n            .catch(err => console.log(err))\n    }\n\n    deleteReview = (event) => {\n        event.preventDefault();\n\n        ACCOUNT_SERVICE\n            .deleteReview(event.target.id)\n            .then(deletedReview =>  {\n                this.props.history.push(`/reviews/${this.props.match.params.accountId}`)\n                window.location.reload();\n            })\n            .catch(err => console.log(err))\n    }\n\n    \n\n\n\n    render() {\n        console.log(this.state.reviews)\n        const isMyProfile = this.props?.user?.user?._id.toString() === this.props.match.params.accountId.toString();\n        // console.log(this.props?.user?.user?._id)\n        // console.log(this.state.isLoggedInUser)\n        return (\n            <div className='container-fluid site-container'>\n            {this.state.reviews.length > 0 && \n                <div className='row'>\n                {this.state.reviews.map(review => {\n                    return(\n                <div key={review._id} className='container review-container-all'>\n                <div className='row review-user'>\n                <div className='to-left'>\n                        <img src={review.author?.photo} alt='user-avi' className='usr-avi-timeline' />\n                        <p><Link to={`/profile/${review.author?._id}`}>{review.author?.username}</Link></p>\n                </div>\n                <div className='to-right'>\n                    <button id={review._id} className='details-btn'><Link to={`/reviewinfo/${review._id}`} className='link-white-txt'>Details</Link></button>\n                    {isMyProfile && <button id={review._id} onClick={event => this.deleteReview(event)} className='review-dlt-btn'>Delete</button>}\n                </div>        \n                </div>\n                <div className='row post-content'>\n                        <div className='post-content-left col-sm-3'>\n                            <img src={review.book?.image_url} alt='book-cvr'/>\n                        </div>\n                        <div className='post-content-right col-sm-9'>\n                        <div>\n                            <h3><Link to={`/bookinfo/${review.book?.google_books_id}`}>{review.book?.title} by {review.book?.authors}</Link></h3>\n                        </div>\n                        <div>\n                        {review.numOfStars === 1 && <p>★☆☆☆☆</p>}\n                            {review.numOfStars === 2 && <p>★★☆☆☆</p>}\n                            {review.numOfStars === 3 && <p>★★★☆☆</p>}\n                            {review.numOfStars === 4 && <p>★★★★☆</p>}\n                            {review.numOfStars === 5 && <p>★★★★★</p>}\n                        </div>\n                        <div>\n                            <p>{review.content}</p>\n                        </div>    \n\n                        </div>\n                </div>\n                \n                </div>\n                    )\n                })}\n                </div>}\n                {this.state.reviews.length === 0 && \n                <div className='row'>\n                    <h1>This user hasn't written any reviews yet.</h1>\n                    <button><Link to={`/profile/${this.props.match.params.accountId}`}>Back to profile</Link></button>\n                </div>}\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport ACCOUNT_SERVICE from '../services/UserInfoService'\n\nexport default class Discussions extends Component {\n    state = {\n        // isLoggedIn: false,\n        discussions: []\n    }\n\n\n    componentDidMount(){\n        this.getUsersDiscussions();\n    }\n\n    getUsersDiscussions = () => {\n        ACCOUNT_SERVICE\n            .getUserProfile(this.props.match.params.accountId)\n            .then(userFromDB => {\n                this.setState({\n                    // isLoggedIn: userFromDB.data.authorized,\n                    discussions: userFromDB.data.user.discussions\n                })\n            })\n            .catch(err => console.log(err))\n    }\n\n    deleteDiscussion = (event) => {\n        event.preventDefault();\n        ACCOUNT_SERVICE\n            .deleteDiscussion(event.target._id)\n            .then(deletedDiscussion => {\n                this.props.history.push(`/discussions/${this.props.match.params.accountId}`)\n                window.location.reload();\n            })\n            .catch(err => console.log(err))\n    }\n\n    render() {\n        // console.log(this.state.isLoggedIn)\n        console.log(this.state.discussions)\n        const isMyProfile = this.props?.user?.user?._id.toString() === this.props.match.params.accountId.toString();\n        // console.log(isMyProfile)\n        return (\n            <div>\n                {/* {this.state.discussions.map(discussion => {\n                    return(\n                        <div key={discussion._id}>\n                            <h2>{discussion.title}</h2>\n                            <h4>Discussing: {discussion.book.title} By: {discussion.book.authors}</h4>\n                            <p>{discussion.discussionContent}</p>\n                            <div>\n                                <button><Link to={`/discussinfo/${discussion._id}`}>Details</Link></button>\n                                {isMyProfile && <button id={discussion._id} onClick={event => this.deleteDiscussion(event)}>Delete</button>}\n                            </div>\n                        </div>\n                    )\n                })} */}\n                <div className='container-fluid site-container'>\n            {this.state.discussions.length > 0 && \n                <div className='row all-discuss'>\n                {this.state.discussions.map(discussion => {\n                    return(\n                <div key={discussion._id} className='container discussion-container-all'>\n                <div className='row discussion-user'>\n                <div className='to-left'>\n                        <img src={discussion.author?.photo} alt='user-avi' className='usr-avi-timeline' />\n                        <p><Link to={`/profile/${discussion.author?._id}`}>{discussion.author?.username}</Link></p>\n                </div>\n                <div className='to-right'>\n                    <button id={discussion._id} className='details-btn'><Link to={`/discussinfo/${discussion._id}`} className='link-white-txt'>Details</Link></button>\n                    {isMyProfile && <button className='discussion-dlt-btn' onClick={event => this.deleteDiscussion(event)}>Delete</button>}\n                </div>        \n                </div>\n                <div className='row post-content'>\n                        <div className='post-content-left col-sm-3'>\n                            <img src={discussion.book?.image_url} alt='book-cvr'/>\n                        </div>\n                        <div className='post-content-right col-sm-9'>\n                        <div>\n                            <h3><Link to={`/bookinfo/${discussion.book?.google_books_id}`}>{discussion.book?.title} by {discussion.book?.authors}</Link></h3>\n                        </div>\n                        <div>\n                        \n                        </div>\n                        <div>\n                            <p>{discussion.discussionContent || discussion.content}</p>\n                        </div>    \n\n                        </div>\n                </div>\n                <div className='row thread-link-container'>\n                        <Link to={`/discussinfo/${discussion._id}`} className='thread-link'>View thread</Link>\n                </div>\n                \n                </div>\n                    )\n                })}\n                </div>}\n                {this.state.discussions.length === 0 && \n                <div className='row'>\n                    <h1>This user hasn't written any discussions yet.</h1>\n                    <button><Link to={`/profile/${this.props.match.params.accountId}`}>Back to profile</Link></button>\n                </div>}\n            </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport ACCOUNT_SERVICE from '../services/UserInfoService'\n\nexport default class Followers extends Component {\n    state = {\n        isLoggedIn: false,\n        followers: []\n    }\n\n    componentDidMount(){\n        this.getUserFollowers();\n    }\n\n    getUserFollowers = () => {\n        ACCOUNT_SERVICE\n            .getUserProfile(this.props.match.params.accountId)\n            .then(user => {\n                this.setState({\n                    isLoggedIn: user.data.authorized,\n                    followers: user.data.user.followers\n                })\n            })\n            .catch(err => console.log(err))\n    }\n    render() {\n        console.log(this.state.followers)\n        return (\n            <div>\n                {this.state.followers.map(follower => {\n                    return(\n                        <div key={follower._id}>\n                            <img src={follower.photo} alt='follower-avi' />\n                            <Link to={`/profile/${follower._id}`}><p>{follower.username}</p></Link>\n                        </div>\n                    )\n                })}\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport ACCOUNT_SERVICE from '../services/UserInfoService'\n\nexport default class Follow extends Component {\n    state = {\n        isLoggedIn: false,\n        following: []\n    }\n\n    componentDidMount(){\n        this.getUserFollowing();\n    }\n\n    getUserFollowing = () => {\n        ACCOUNT_SERVICE\n            .getUserProfile(this.props.match.params.accountId)\n            .then(user => {\n                this.setState({\n                    isLoggedIn: user.data.authorized,\n                    following: user.data.user.following\n                })\n            })\n            .catch(err => console.log(err))\n    }\n\n\n\n    render() {\n        console.log(this.state.following)\n        return (\n            <div>\n                {this.state.following.map(following => {\n                    return(\n                        <div key={following._id}>\n                            <img src={following.photo} alt='following-avi' />\n                            <Link to={`/profile/${following._id}`}><p>{following.username}</p></Link>\n                        </div>\n                    )\n                })}\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport SEARCH_SERVICE from '../services/SearchService'\nimport ACCOUNT_SERVICE from '../services/UserInfoService'\n\nexport default class BookDetails extends Component {\n    state = {\n        book: [],\n        paramId: ''\n    }\n\n    componentDidMount(){\n        this.getDetails();\n    }\n\n    getDetails = () => {\n        console.log({\n            state: this.state.paramId,\n            params: this.props.match.params.bookId\n        })\n        \n            SEARCH_SERVICE\n                .getBookDetails(this.props.match.params.bookId)\n                .then(bookFromDB => {\n                    console.log(bookFromDB.data)\n                    this.setState({\n                        book: bookFromDB.data,\n                        paramId: this.props.match.params.bookId\n                    })\n                })\n        \n    }\n\n    addToHasRead = (event) => {\n        event.preventDefault();\n        ACCOUNT_SERVICE\n            .addBookToHasReadList(this.state.book._id)\n            .then(addedBook => {\n                console.log({ book: addedBook })\n                this.props.history.push(`/shelves/${this.props?.user?.user?._id}`)\n            })\n            .catch(err => console.log(err))\n    }\n\n    addToWantToRead = (event) => {\n        event.preventDefault();\n        ACCOUNT_SERVICE\n        .addBookToWantToReadList(this.state.book._id)\n        .then(addedBook => {\n            this.props.history.push(`/shelves/${this.props?.user?.user?._id}`)\n        })\n        .catch(err => console.log(err))\n    }\n\n   \n    render() {\n        console.log(this.state.book)\n        const { book } = this.state\n        if(this.state.paramId !== this.props.match.params.bookId){ this.getDetails() }\n        return (\n            <div className='container'>\n                <div className='row'>\n                    <div className='col-lg-3'>\n                    <img src={book.image_url} alt='book-cover' />\n                    <button>\n                    <Link to={`/review/${book._id}`}>\n                    Write a Review\n                    </Link>\n                </button>\n                <button>\n                    <Link to={`/discuss/${book._id}`}>\n                    Start a Discussion\n                    </Link>\n                </button>\n                <button onClick={event => this.addToWantToRead(event)}>Add to want to read shelf</button>\n                <button onClick={event => this.addToHasRead(event)}>Add to has read shelf</button>\n                    </div>\n                    <div className='col-lg-9'>\n                    <h1>{book.title}</h1>\n                    <h3>{book.subtitle}</h3>\n                    <p>by: {book.authors}</p>\n                    <p>{book.description}</p>\n                    </div>\n                </div>\n                <div className='row'>\n                    <div>\n                        {/* <h2>Reviews</h2> */}\n                        {/* {book.reviews.map(review => {\n                            return(\n                                <p>{review._id}</p>\n                            )\n                        })} */}\n                    </div>\n                </div>\n                {/* <img src={book.image_url} alt='book-cover' />\n                <button>\n                    <Link to={`/review/${book._id}`}>\n                    Write a Review\n                    </Link>\n                </button>\n                <button>\n                    <Link to={`/discuss/${book._id}`}>\n                    Start a Discussion\n                    </Link>\n                </button>\n                <button onClick={event => this.addToWantToRead(event)}>Add to want to read shelf</button>\n                <button onClick={event => this.addToHasRead(event)}>Add to has read shelf</button>\n                    <h1>{book.title}</h1>\n                    <h3>{book.subtitle}</h3>\n                    <p>by: {book.authors}</p>\n                    <p>{book.description}</p> */}\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport ACCOUNT_SERVICE from '../services/UserInfoService'\nimport Follow from './Following';\n\nexport default class Timeline extends Component {\n    state = {\n        usersTheyFollowAndPosts: [],\n        viewingDiscussions: false\n    }\n\n    componentDidMount(){\n        this.getUsersTimeline();\n    }\n\n    getUsersTimeline = () => {\n        ACCOUNT_SERVICE\n            .getTimeline()\n            .then(responseFromDB => {\n                // console.log(responseFromDB.data)\n                this.setState({\n                    usersTheyFollowAndPosts: responseFromDB.data.timelinePosts\n                })\n            })\n            .catch(err => console.log(err))\n    }\n\n    switchToDiscussionsView = () => {\n        this.setState({\n            viewingDiscussions: !this.state.viewingDiscussions\n        })\n    }\n\n    render() {\n        console.log(this.state.usersTheyFollowAndPosts)\n        const { user } = this.props.user\n        // const isMyProfile = this.props?.user?.user?._id.toString() === this.props.match.params.accountId.toString();\n        return (\n            <div className='container-fluid'>\n                <div className='row'>\n                    <div className='col-lg-3 sidebar'>\n                        <div className='user-stats'>\n                        <div className='avi-and-name'>\n                            <img src={user?.photo} alt='usr-avi' className='usr-avi-timeline' />\n                                <p className='home-username'>{user?.username}</p>\n                           \n                        </div>\n                        <div className='below-user-sidebar'>\n                            <div className='bio'>\n                            <b>Bio</b>\n                            <p>{user?.bio}</p>    \n                            </div>\n                            <div className='follow-stats-tl'>\n                                <b>Following</b>\n                                <p>{user?.following.length}</p>\n                                <b>Followers</b>\n                                <p>{user?.followers.length}</p>\n                            </div>\n                        \n                        <div className='switch-tl-view'>\n                            {!this.state.viewingDiscussions && <button onClick={this.switchToDiscussionsView} className='details-btn' style={{color: 'white'}}>View Discussions</button>}\n                            {this.state.viewingDiscussions && <button onClick={this.switchToDiscussionsView} className='review-dlt-btn'>View Reviews</button>}\n                        </div>\n                        </div>\n                        </div>\n                    </div>\n                    <div className='col-lg-9 main-content'>\n                    {!this.state.viewingDiscussions && <div>\n                    <h2>Reviews from people you follow</h2>\n                        {this.state.usersTheyFollowAndPosts.map(personTheyFollow => {\n                            return(\n                                <div>\n                                {personTheyFollow.reviews.map(review => {\n                                    return(\n                                        <div key={review._id} className='timeline-item container'>\n                                            <div className='usr-info-timeline row'>\n                                                <img src={personTheyFollow.photo} alt='user' className='usr-avi-timeline' />\n                                                <Link to={`/profile/${personTheyFollow._id}`}>{personTheyFollow.username}</Link>\n                                            </div>\n                                            <div className='post-content-timeline row'>\n                                                <div className='post-book-img col-md-3'>\n                                                    <img src={review.book?.image_url} alt='book-cvr' />\n                                                </div>\n                                                <div className='post-text-content col-md-9'>\n                                                    <h4>{review.book?.title} by: {review.book?.authors}</h4>\n                                                    {review.numOfStars === 1 && <p>★☆☆☆☆</p>}\n                                                    {review.numOfStars === 2 && <p>★★☆☆☆</p>}\n                                                    {review.numOfStars === 3 && <p>★★★☆☆</p>}\n                                                    {review.numOfStars === 4 && <p>★★★★☆</p>}\n                                                    {review.numOfStars === 5 && <p>★★★★★</p>}\n                                                    <p>{review.content}</p>\n                                                </div>\n                                            </div>\n                                            </div>\n                                    )\n                                \n                            })}\n                                </div>\n                            )\n                            \n                        })}\n                        </div>}\n                        {this.state.viewingDiscussions && <div>\n                            <h2>Discussions from people you follow</h2>\n                            {this.state.usersTheyFollowAndPosts.map(personTheyFollow => {\n                                return(\n                                    <div>\n                                    {personTheyFollow.discussions.map(discussion => {\n                                        return(\n                                            <div key={discussion._id} className='timeline-item container'>\n                                            <div className='usr-info-timeline row'>\n                                                <img src={personTheyFollow.photo} alt='user' className='usr-avi-timeline' />\n                                                <Link to={`/profile/${personTheyFollow._id}`}>{personTheyFollow.username}</Link>\n                                            </div>\n                                            <div className='post-content-timeline row'>\n                                                <div className='post-book-img col-md-3'>\n                                                    <img src={discussion.book?.image_url} alt='book-cvr' />\n                                                </div>\n                                                <div className='post-text-content col-md-9'>\n                                                    <h4>{discussion.book?.title} by: {discussion.book?.authors}</h4>\n                                                    <h5>{discussion.title}</h5>\n                                                    <p>{discussion.discussionContent || discussion.content}</p>\n                                                </div>\n                                            </div>\n                                            </div>\n                                        )\n                                    })}\n                                    </div>\n                                )\n                            })}\n                        </div>}\n                    </div>\n                </div>\n            </div>\n            \n        )\n    }\n}\n","import React from 'react'\n\nexport default function Footer() {\n    return (\n        <footer>\n            <div className='foot-toleft'>\n                <ul>\n                    <li className='foot-title'>COMPANY</li>\n                    <li>About Us</li>\n                    <li>Contact</li>\n                    <li>Careers</li>\n                    <li>Terms</li>\n                    <li>Privacy</li>\n                </ul>\n                <ul>\n                    <li className='foot-title'>CONNECT</li>\n                    <div className='foot-imgs'>\n                        <li><img src=\"https://img.icons8.com/fluent/48/000000/github.png\" alt='github'/></li>\n                        <li><img src=\"https://img.icons8.com/metro/26/000000/linkedin.png\" alt='linkedin'/></li>\n                    </div>\n                </ul>\n            </div>\n            <div className='foot-toright'>\n            <ul>\n                <li>Bookr.</li>\n                <li>Ironhack PTWD June 2020</li>\n                <li>Final Project by Mikayla Castro</li>\n            </ul>\n            </div>\n        </footer>\n    )\n}\n","import React, { Component } from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\nimport Landing from './components/Landing'\nimport Signup from './components/Authentication/Signup'\nimport Login from './components/Authentication/Login'\nimport AUTH_SERVICE from './services/AuthService'\nimport Search from './components/Search'\nimport UserProfile from './components/UserProfile'\nimport NavBar from './components/NavBar'\nimport AccountDetails from './components/AccountDetails'\nimport Bookshelves from './components/Bookshelves'\nimport Discussion from './components/Create/Discussion'\nimport DiscussionDetails from './components/DiscussionDetails'\nimport Review from './components/Create/Review'\nimport ReviewDetails from './components/ReviewDetails'\nimport Reviews from './components/Reviews'\nimport Discussions from './components/Discussions'\nimport Followers from './components/Followers'\nimport Following from './components/Following'\nimport BookDetails from './components/BookDetails'\nimport Timeline from './components/Timeline'\nimport Footer from './components/Footer'\n// import CreateReview from './components/Create/Review'\n// import CreateDiscussion from './components/Create/Discussion'\n\nexport default class App extends Component {\n\n  state = {\n    currentUser: null,\n    reviews: [],\n    discussions: []\n  }\n\n  componentDidMount() {\n    // console.log('component mounted', {AUTH_SERVICE});\n    this.updateUser();\n  }\n\n  updateUser = user => {\n    // this.setState({ currentUser: user })\n    AUTH_SERVICE.getAuthenticatedUser()\n    .then(responseFromServer => {\n      console.log(`auth user in App.js ${responseFromServer}`)\n      this.setState({\n        currentUser: responseFromServer.data\n      })\n    })\n    .catch(err => { \n      console.log('error in update user', err);\n      this.setState({currentUser: null});\n    });\n  }\n\n  // updateUserReviews = review => {\n  \n  // }\n\n  render() {\n    console.log('user in client', this.state.currentUser)\n    return (\n      <div>\n    \n      <NavBar user={this.state.currentUser} onUserChange={this.updateUser}/>\n          <Switch>\n            <Route exact path='/' render={props => <Landing {...props} user={this.state.currentUser} onUserChange={this.updateUser}/>} />\n            <Route exact path='/search' render={props => <Search {...props} />} />\n            <Route exact path='/signup' render={props => <Signup {...props} />} />\n            <Route exact path='/login' render={props => <Login {...props} onUserChange={this.updateUser} />} />\n            <Route exact path='/profile/:accountId' render={props => <UserProfile {...props} user={this.state.currentUser} onUserChange={this.updateUser} /> }/>\n            <Route exact path='/account/:accountId' render={props => <AccountDetails {...props} user={this.state.currentUser} onUserChange={this.updateUser} />} />\n            <Route exact path='/shelves/:accountId' render={props => <Bookshelves {...props} user={this.state.currentUser} /> } />\n            <Route exact path='/discuss/:bookId' render={props => <Discussion {...props} user={this.state.currentUser} />} />\n            <Route exact path='/discussions/:accountId' render={props => <Discussions {...props} user={this.state.currentUser} onUserChange={this.updateUser} /> } />\n            <Route exact path='/discussinfo/:discussionId' render={props => <DiscussionDetails {...props} user={this.state.currentUser} />} /> \n            <Route exact path='/review/:bookId' render={props => <Review {...props} user={this.state.currentUser} />} />\n            <Route exact path='/reviewinfo/:reviewId' render={props => <ReviewDetails {...props} user={this.state.currentUser} />} />\n            <Route exact path='/reviews/:accountId' render={props => <Reviews {...props} user={this.state.currentUser} onUserChange={this.updateUser}/>} />\n            <Route exact path='/followers/:accountId' component={Followers} />\n            <Route exact path='/following/:accountId' component={Following} />\n            <Route exact path='/bookinfo/:bookId' render={props => <BookDetails {...props} user={this.state.currentUser} /> } />\n            {/* <Route exact path='/home' render={props => <Timeline {...props} user={this.state.currentUser} /> } /> */}\n            <Route exact path='/home' render={props => <Timeline {...props} user={this.state.currentUser} />} />\n            {/* <Route exact path='/review/:bookId' render={props => <CreateReview {...props} user={this.state.currentUser} />} />\n            <Route exact path='/discuss/:bookId' render={props => <CreateDiscussion {...props} user={this.state.currentUser} />} /> */}\n          </Switch>\n      <Footer />\n      </div>\n    )\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}